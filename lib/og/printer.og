!og

import
  strconv
  "github.com/buger/goterm": tm
  "github.com/k0kubun/go-ansi": curs

struct Printer
  Config *OgConfig
  spinner int

  Compiling(nbFiles int) ->
    if @Config.Quiet
      return

    tm.Print("                                          \r")
    tm.Println(tm.Color("[", tm.RED), tm.Color(strconv.Itoa(nbFiles), tm.GREEN), tm.Color("/", tm.RED), tm.Color(strconv.Itoa(nbFiles), tm.GREEN), tm.Color("]", tm.RED), tm.Color("Compiling go", tm.YELLOW))
    tm.MoveCursorUp(1)
    tm.Flush()

  Compiled(nbFiles int) ->
    if @Config.Quiet
      return

    tm.MoveCursorUp(1)
    tm.Print("                                          \r")
    tm.Print(tm.Color("~> ", tm.RED), tm.Color("Oglang: ", tm.MAGENTA), tm.Color("Compiled ", tm.GREEN), tm.Color(strconv.Itoa(nbFiles), tm.YELLOW), tm.Color(" files.", tm.GREEN))
    tm.Flush()

  Running ->
    if @Config.Quiet
      return

    tm.MoveCursorUp(1)
    tm.Print("                                          \r")
    tm.Print(tm.Color("~> ", tm.RED), tm.Color("Oglang: ", tm.MAGENTA), tm.Color("Running... \n", tm.GREEN))
    tm.Flush()

  NothingToDo ->
    tm.Print("                                          \r")
    tm.Print(tm.Color("~> ", tm.RED), tm.Color("Oglang: ", tm.MAGENTA), tm.Color("Nothing to do.", tm.GREEN))
    tm.Flush()

  *CompileList(files []string, workerIds []int, nbWorkers, finished, total int) ->
    if @Config.Quiet
      return

    spinners := []string{"|", "/", "-", "\\"}
    tm.Print("                                          \r")
    tm.Println(spinners[@spinner], tm.Color("[", tm.RED), tm.Color(strconv.Itoa(finished), tm.YELLOW), tm.Color("/", tm.RED), tm.Color(strconv.Itoa(total), tm.GREEN), tm.Color("]", tm.RED), tm.Color("Building sources", tm.YELLOW))

    for i, file in files
      tm.Print("                                          \r")
      tm.Println(tm.Color(strconv.Itoa(workerIds[i]), tm.CYAN), tm.Color(":", tm.RED), tm.Color(file, tm.MAGENTA))

    workers := nbWorkers
    for len(files) < workers
      tm.Print("                                          \n")
      workers--

    tm.MoveCursorUp(nbWorkers + 2)
    tm.Flush()

    @spinner += 1
    @spinner %= 4

  CursorHide -> if !@Config.Quiet => curs.CursorHide()
  CursorShow -> if !@Config.Quiet => curs.CursorShow()


NewPrinter(config *OgConfig): *Printer ->
  &Printer
    Config: config
