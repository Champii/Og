// Code generated by goyacc -o grammar.go grammar.y. DO NOT EDIT.

//line grammar.y:2

//TODO Put your favorite license here

// yacc source generated by ebnf2y[1]
// at 2018-08-30 22:07:22.699480497 +0200 CEST m=+0.008097438
//
//  $ /home/champii/go/bin/ebnf2y -pkg gen -start SourceFile grammar.ebnf
//
// CAUTION: If this file is a Go source file (*.go), it was generated
// automatically by '$ go tool yacc' from a *.y file - DO NOT EDIT in that case!
//
//   [1]: http://github.com/cznic/ebnf2y

package gen //TODO real package name
import __yyfmt__ "fmt"

//line grammar.y:15
//TODO required only be the demo _dump function
import (
	"bytes"
	"fmt"
	"strings"

	"github.com/cznic/strutil"
)

//line grammar.y:28
type yySymType struct {
	yys  int
	item interface{} //TODO insert real field(s)
}

const ASSIGN_OP = 57346
const BINARY_OP = 57347
const FLOAT_LIT = 57348
const IDENTIFIER = 57349
const IMAGINARY_LIT = 57350
const INT_LIT = 57351
const RUNE_LIT = 57352
const STRING_LIT = 57353
const UNARY_OP = 57354
const TOK1 = 57355
const TOK2 = 57356
const TOK3 = 57357
const TOK4 = 57358
const TOK5 = 57359
const BREAK = 57360
const CASE = 57361
const CHAN = 57362
const CONST = 57363
const CONTINUE = 57364
const DEFAULT = 57365
const DEFER = 57366
const ELSE = 57367
const FALLTHROUGH = 57368
const FOR = 57369
const FUNC = 57370
const GO = 57371
const GOTO = 57372
const IF = 57373
const IMPORT = 57374
const INTERFACE = 57375
const MAP = 57376
const PACKAGE = 57377
const RANGE = 57378
const RETURN = 57379
const SELECT = 57380
const STRUCT = 57381
const SWITCH = 57382
const TYPE = 57383
const VAR = 57384

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"ASSIGN_OP",
	"BINARY_OP",
	"FLOAT_LIT",
	"IDENTIFIER",
	"IMAGINARY_LIT",
	"INT_LIT",
	"RUNE_LIT",
	"STRING_LIT",
	"UNARY_OP",
	"TOK1",
	"TOK2",
	"TOK3",
	"TOK4",
	"TOK5",
	"BREAK",
	"CASE",
	"CHAN",
	"CONST",
	"CONTINUE",
	"DEFAULT",
	"DEFER",
	"ELSE",
	"FALLTHROUGH",
	"FOR",
	"FUNC",
	"GO",
	"GOTO",
	"IF",
	"IMPORT",
	"INTERFACE",
	"MAP",
	"PACKAGE",
	"RANGE",
	"RETURN",
	"SELECT",
	"STRUCT",
	"SWITCH",
	"TYPE",
	"VAR",
	"'='",
	"'('",
	"')'",
	"','",
	"'['",
	"']'",
	"'{'",
	"'}'",
	"':'",
	"';'",
	"'*'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line grammar.y:1965

//TODO remove demo stuff below

var _parserResult interface{}

type (
	AliasDecl         interface{}
	Arguments         interface{}
	Arguments1        interface{}
	Arguments11       interface{}
	Arguments111      interface{}
	Arguments12       interface{}
	Arguments13       interface{}
	ArrayLength       interface{}
	ArrayType         interface{}
	Assignment        interface{}
	BaseType          interface{}
	BasicLit          interface{}
	Block             interface{}
	BreakStmt         interface{}
	BreakStmt1        interface{}
	Channel           interface{}
	ChannelType       interface{}
	ChannelType1      interface{}
	CommCase          interface{}
	CommCase1         interface{}
	CommClause        interface{}
	CompositeLit      interface{}
	Condition         interface{}
	ConstDecl         interface{}
	ConstDecl1        interface{}
	ConstDecl11       interface{}
	ConstSpec         interface{}
	ConstSpec1        interface{}
	ConstSpec11       interface{}
	ContinueStmt      interface{}
	ContinueStmt1     interface{}
	Conversion        interface{}
	Conversion1       interface{}
	Declaration       interface{}
	DeferStmt         interface{}
	Element           interface{}
	ElementList       interface{}
	ElementList1      interface{}
	ElementType       interface{}
	EmbeddedField     interface{}
	EmbeddedField1    interface{}
	EmptyStmt         interface{}
	ExprCaseClause    interface{}
	ExprSwitchCase    interface{}
	ExprSwitchStmt    interface{}
	ExprSwitchStmt1   interface{}
	ExprSwitchStmt2   interface{}
	ExprSwitchStmt3   interface{}
	Expression        interface{}
	ExpressionList    interface{}
	ExpressionList1   interface{}
	ExpressionStmt    interface{}
	FallthroughStmt   interface{}
	FieldDecl         interface{}
	FieldDecl1        interface{}
	FieldDecl2        interface{}
	FieldName         interface{}
	ForClause         interface{}
	ForClause1        interface{}
	ForClause2        interface{}
	ForClause3        interface{}
	ForStmt           interface{}
	ForStmt1          interface{}
	ForStmt11         interface{}
	FunctionBody      interface{}
	FunctionDecl      interface{}
	FunctionDecl1     interface{}
	FunctionLit       interface{}
	FunctionName      interface{}
	FunctionType      interface{}
	GoStmt            interface{}
	GotoStmt          interface{}
	IdentifierList    interface{}
	IdentifierList1   interface{}
	IfStmt            interface{}
	IfStmt1           interface{}
	IfStmt2           interface{}
	IfStmt21          interface{}
	ImportDecl        interface{}
	ImportDecl1       interface{}
	ImportDecl11      interface{}
	ImportPath        interface{}
	ImportSpec        interface{}
	ImportSpec1       interface{}
	ImportSpec11      interface{}
	IncDecStmt        interface{}
	IncDecStmt1       interface{}
	Index             interface{}
	InitStmt          interface{}
	InterfaceType     interface{}
	InterfaceType1    interface{}
	InterfaceTypeName interface{}
	Key               interface{}
	KeyType           interface{}
	KeyedElement      interface{}
	KeyedElement1     interface{}
	Label             interface{}
	LabeledStmt       interface{}
	Literal           interface{}
	LiteralType       interface{}
	LiteralValue      interface{}
	LiteralValue1     interface{}
	LiteralValue11    interface{}
	MapType           interface{}
	MethodDecl        interface{}
	MethodDecl1       interface{}
	MethodExpr        interface{}
	MethodName        interface{}
	MethodSpec        interface{}
	Operand           interface{}
	OperandName       interface{}
	PackageClause     interface{}
	PackageName       interface{}
	ParameterDecl     interface{}
	ParameterDecl1    interface{}
	ParameterDecl2    interface{}
	ParameterList     interface{}
	ParameterList1    interface{}
	Parameters        interface{}
	Parameters1       interface{}
	Parameters11      interface{}
	PointerType       interface{}
	PostStmt          interface{}
	PrimaryExpr       interface{}
	QualifiedIdent    interface{}
	RangeClause       interface{}
	RangeClause1      interface{}
	RangeClause11     interface{}
	Receiver          interface{}
	ReceiverType      interface{}
	RecvExpr          interface{}
	RecvStmt          interface{}
	RecvStmt1         interface{}
	RecvStmt11        interface{}
	Result            interface{}
	ReturnStmt        interface{}
	ReturnStmt1       interface{}
	SelectStmt        interface{}
	SelectStmt1       interface{}
	Selector          interface{}
	SendStmt          interface{}
	ShortVarDecl      interface{}
	Signature         interface{}
	Signature1        interface{}
	SimpleStmt        interface{}
	Slice             interface{}
	Slice1            interface{}
	Slice2            interface{}
	Slice3            interface{}
	SliceType         interface{}
	SourceFile        interface{}
	SourceFile1       interface{}
	SourceFile2       interface{}
	Start             interface{}
	Statement         interface{}
	StatementList     interface{}
	StatementList1    interface{}
	StructType        interface{}
	StructType1       interface{}
	SwitchStmt        interface{}
	Tag               interface{}
	TopLevelDecl      interface{}
	Type              interface{}
	TypeAssertion     interface{}
	TypeCaseClause    interface{}
	TypeDecl          interface{}
	TypeDecl1         interface{}
	TypeDecl11        interface{}
	TypeDef           interface{}
	TypeList          interface{}
	TypeList1         interface{}
	TypeLit           interface{}
	TypeName          interface{}
	TypeSpec          interface{}
	TypeSwitchCase    interface{}
	TypeSwitchGuard   interface{}
	TypeSwitchGuard1  interface{}
	TypeSwitchStmt    interface{}
	TypeSwitchStmt1   interface{}
	TypeSwitchStmt2   interface{}
	UnaryExpr         interface{}
	VarDecl           interface{}
	VarDecl1          interface{}
	VarDecl11         interface{}
	VarSpec           interface{}
	VarSpec1          interface{}
	VarSpec11         interface{}
)

func _dump() {
	s := fmt.Sprintf("%#v", _parserResult)
	s = strings.Replace(s, "%", "%%", -1)
	s = strings.Replace(s, "{", "{%i\n", -1)
	s = strings.Replace(s, "}", "%u\n}", -1)
	s = strings.Replace(s, ", ", ",\n", -1)
	var buf bytes.Buffer
	strutil.IndentFormatter(&buf, ". ").Format(s)
	buf.WriteString("\n")
	a := strings.Split(buf.String(), "\n")
	for _, v := range a {
		if strings.HasSuffix(v, "(nil)") || strings.HasSuffix(v, "(nil),") {
			continue
		}

		fmt.Println(v)
	}
}

// End of demo stuff

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 36,
	45, 189,
	-2, 181,
	-1, 40,
	52, 44,
	-2, 46,
	-1, 71,
	54, 179,
	-2, 301,
	-1, 109,
	45, 189,
	-2, 181,
	-1, 141,
	49, 159,
	-2, 279,
	-1, 149,
	49, 155,
	-2, 293,
	-1, 150,
	49, 154,
	-2, 294,
	-1, 151,
	49, 157,
	-2, 298,
	-1, 152,
	49, 158,
	-2, 299,
	-1, 176,
	52, 66,
	-2, 267,
	-1, 177,
	45, 301,
	54, 179,
	-2, 113,
	-1, 249,
	49, 98,
	52, 66,
	-2, 205,
	-1, 251,
	16, 113,
	46, 113,
	49, 301,
	51, 149,
	-2, 176,
	-1, 252,
	17, 26,
	49, 82,
	52, 82,
	-2, 80,
	-1, 256,
	52, 66,
	-2, 71,
	-1, 268,
	54, 210,
	-2, 7,
	-1, 280,
	49, 301,
	51, 89,
	-2, 176,
	-1, 294,
	52, 301,
	54, 179,
	-2, 170,
	-1, 311,
	16, 113,
	46, 113,
	-2, 176,
	-1, 318,
	17, 26,
	49, 37,
	52, 82,
	-2, 80,
	-1, 417,
	17, 26,
	-2, 80,
}

const yyPrivate = 57344

const yyLast = 936

var yyAct = [...]int{

	141, 134, 175, 235, 227, 126, 103, 274, 315, 279,
	219, 216, 57, 61, 125, 55, 43, 102, 49, 160,
	56, 196, 255, 38, 195, 196, 232, 7, 195, 7,
	201, 424, 41, 121, 421, 194, 383, 188, 25, 81,
	35, 68, 67, 40, 6, 51, 371, 368, 68, 94,
	445, 30, 68, 97, 446, 150, 140, 68, 108, 63,
	362, 356, 298, 212, 211, 99, 26, 182, 174, 31,
	23, 68, 120, 110, 29, 283, 29, 107, 289, 5,
	451, 442, 407, 408, 449, 68, 156, 40, 118, 68,
	161, 100, 30, 412, 68, 167, 74, 72, 440, 354,
	339, 157, 441, 74, 72, 338, 299, 74, 72, 166,
	68, 120, 74, 72, 169, 397, 68, 181, 51, 398,
	294, 245, 347, 188, 68, 161, 74, 72, 179, 437,
	215, 254, 63, 188, 151, 199, 404, 403, 104, 104,
	74, 72, 197, 187, 74, 72, 394, 188, 312, 74,
	72, 203, 158, 154, 296, 282, 186, 202, 188, 159,
	68, 209, 459, 290, 204, 74, 72, 104, 200, 392,
	344, 74, 72, 389, 41, 78, 448, 349, 297, 74,
	72, 180, 78, 226, 200, 184, 78, 68, 161, 164,
	337, 78, 113, 188, 257, 458, 391, 47, 268, 346,
	71, 41, 384, 63, 260, 78, 258, 340, 295, 184,
	90, 260, 168, 89, 271, 74, 72, 111, 41, 78,
	292, 85, 281, 78, 47, 152, 86, 87, 78, 286,
	172, 36, 83, 269, 454, 165, 200, 70, 149, 117,
	82, 447, 74, 72, 78, 432, 84, 4, 261, 171,
	78, 183, 119, 331, 41, 50, 310, 372, 78, 11,
	323, 44, 68, 336, 72, 411, 79, 335, 304, 307,
	308, 163, 325, 79, 330, 34, 162, 79, 433, 73,
	406, 374, 79, 68, 161, 353, 73, 68, 360, 361,
	73, 39, 373, 332, 78, 73, 79, 68, 161, 342,
	116, 359, 355, 213, 54, 188, 226, 188, 363, 73,
	79, 366, 36, 328, 79, 329, 364, 74, 72, 79,
	370, 78, 382, 73, 217, 71, 20, 73, 267, 305,
	58, 41, 73, 19, 13, 79, 210, 185, 74, 72,
	7, 79, 74, 72, 331, 72, 21, 22, 73, 79,
	170, 96, 74, 72, 73, 95, 173, 48, 18, 423,
	334, 247, 73, 381, 143, 280, 144, 142, 145, 146,
	127, 380, 302, 444, 393, 90, 69, 457, 89, 452,
	400, 324, 46, 92, 42, 79, 148, 405, 17, 443,
	192, 86, 87, 12, 358, 228, 78, 83, 73, 206,
	409, 414, 133, 176, 1, 153, 9, 203, 8, 2,
	264, 84, 79, 385, 263, 429, 427, 78, 428, 191,
	420, 78, 105, 238, 189, 73, 369, 229, 301, 221,
	106, 78, 436, 418, 416, 415, 430, 135, 33, 124,
	322, 320, 317, 435, 75, 71, 68, 453, 68, 336,
	112, 59, 455, 114, 456, 90, 60, 115, 89, 62,
	68, 460, 3, 376, 377, 132, 85, 128, 291, 130,
	178, 86, 87, 15, 348, 272, 390, 83, 147, 131,
	218, 98, 70, 275, 208, 82, 276, 79, 293, 207,
	198, 84, 77, 321, 190, 327, 236, 28, 27, 53,
	73, 74, 72, 74, 72, 52, 377, 24, 79, 10,
	124, 426, 79, 410, 309, 74, 72, 91, 224, 220,
	76, 73, 79, 32, 138, 73, 101, 14, 314, 419,
	313, 230, 434, 252, 399, 73, 143, 139, 144, 142,
	145, 146, 127, 319, 205, 259, 316, 90, 277, 357,
	89, 285, 262, 284, 225, 234, 214, 270, 148, 422,
	278, 378, 333, 86, 87, 246, 439, 438, 233, 83,
	288, 287, 450, 350, 133, 273, 351, 153, 123, 231,
	78, 345, 78, 84, 129, 306, 223, 143, 139, 144,
	142, 145, 146, 127, 78, 66, 300, 65, 90, 64,
	37, 89, 252, 16, 137, 395, 318, 326, 413, 148,
	396, 88, 80, 252, 86, 87, 253, 303, 222, 136,
	83, 155, 237, 122, 388, 133, 341, 343, 153, 266,
	203, 265, 352, 193, 84, 45, 143, 139, 144, 142,
	145, 146, 127, 0, 0, 0, 0, 90, 0, 0,
	89, 0, 0, 0, 365, 0, 252, 0, 148, 0,
	0, 0, 0, 86, 87, 0, 367, 0, 0, 83,
	0, 79, 0, 79, 133, 0, 0, 153, 123, 0,
	0, 0, 0, 84, 73, 79, 73, 375, 0, 0,
	379, 0, 0, 0, 0, 386, 387, 0, 73, 143,
	251, 144, 142, 145, 146, 127, 0, 0, 0, 0,
	90, 241, 0, 89, 20, 242, 0, 250, 0, 244,
	249, 148, 239, 243, 245, 0, 86, 87, 401, 402,
	240, 248, 83, 256, 21, 22, 0, 133, 0, 0,
	153, 0, 104, 0, 0, 0, 84, 0, 0, 278,
	0, 0, 0, 0, 417, 143, 139, 144, 142, 145,
	146, 127, 0, 0, 0, 425, 90, 0, 0, 89,
	0, 0, 0, 431, 0, 0, 0, 148, 252, 0,
	0, 0, 86, 87, 0, 0, 0, 0, 83, 0,
	0, 0, 0, 133, 0, 0, 153, 0, 0, 0,
	0, 0, 84, 143, 311, 144, 142, 145, 146, 127,
	0, 0, 0, 0, 90, 0, 0, 89, 143, 139,
	144, 142, 145, 146, 0, 148, 0, 0, 0, 90,
	86, 87, 89, 0, 0, 0, 83, 0, 0, 0,
	148, 133, 71, 0, 153, 86, 87, 0, 0, 0,
	84, 83, 90, 0, 71, 89, 133, 0, 0, 153,
	0, 0, 0, 85, 90, 84, 0, 89, 86, 87,
	0, 0, 0, 0, 83, 85, 0, 177, 93, 70,
	86, 87, 82, 0, 0, 0, 83, 90, 84, 71,
	89, 70, 0, 0, 82, 0, 0, 0, 85, 90,
	84, 0, 89, 86, 87, 0, 0, 0, 0, 83,
	85, 0, 0, 0, 70, 86, 87, 82, 0, 0,
	0, 83, 0, 84, 0, 0, 109, 0, 0, 82,
	0, 0, 0, 0, 0, 84,
}
var yyPact = [...]int{

	212, -1000, -1000, 27, 333, -1000, -1000, -1000, 227, 305,
	18, 22, 17, -1000, -1000, -1000, -1000, -1000, -1000, 268,
	247, 217, 211, -1000, -1000, -1000, -1000, 293, -1000, -1000,
	-1000, -1000, 187, 323, -1000, -1000, 324, -1000, -1000, -1000,
	847, -1000, -1000, -1000, -1000, -1000, -1000, 835, -1000, -1000,
	-1000, 438, 20, -1000, -1000, 89, 882, 187, -1000, 172,
	146, -1000, 286, -1000, 194, -1000, 209, -1000, -1000, -1000,
	847, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -21, 630, 104, 847, 187, 103, 112, 847, 259,
	251, 143, 190, 847, -1000, 167, -1000, 206, 749, -1000,
	16, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 870,
	89, -1000, -1000, -1000, 135, 847, -1000, -1000, 15, 749,
	164, 330, 108, 847, 302, -1000, -19, 749, -1000, -1000,
	-1000, -1000, -1000, 749, 192, -24, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 102, 187, -1000,
	-1000, -1000, -1000, 530, -1000, -1000, -1000, -1000, -1000, 847,
	-1000, -1000, -1000, -1000, 329, -1000, 12, -1000, -1000, 11,
	-1000, 749, -1000, 302, -1000, 80, 693, -1000, -1000, -1000,
	324, -1000, -1000, -1000, -1000, -1000, 847, -1000, 749, -1000,
	-1000, -1000, -1000, -1000, 204, 749, 749, -1000, 188, 140,
	749, 323, -1000, 358, 89, 107, 25, 113, 106, -1000,
	-1000, -1000, -1000, -1000, 132, -1000, 10, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55, -1000, -1000, -1000, -1000, -1000, -1000, 749,
	749, 322, 322, 322, -1000, 797, -1000, -1000, 99, 797,
	749, -1000, 300, 257, 340, 277, 797, -1000, -1000, 302,
	-1000, 847, 142, 54, 49, 162, 285, -1000, 124, -1000,
	153, -1000, 72, 131, -1000, 581, 48, -1000, 302, -1000,
	-1000, -1000, 847, -1000, 9, 290, 847, -1000, 318, -1000,
	-1000, 8, 187, -1000, -1000, -1000, 847, 749, -1000, 693,
	302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 749,
	-5, -1000, -1000, 89, -1000, -1000, -1000, -1000, 300, -6,
	221, -1000, -1000, -1000, 249, 265, 302, -1000, -1000, -1000,
	749, 749, 749, 749, 315, -16, 157, -1000, 749, 749,
	-1000, 127, -1000, -1000, 749, 151, -1000, -1000, -1000, -1000,
	123, -1000, 302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 302, -1000, 118, -1000, 96,
	-1000, 749, 749, -1000, 749, 302, -1000, -1000, 88, 302,
	87, 812, 264, -1000, -1000, 34, 302, 32, -1000, -1000,
	-1000, -1000, 358, 240, -1000, -1000, 42, 797, -1000, -18,
	-1000, 302, 302, -1000, -1000, -23, -1000, -1000, 749, -1000,
	-1000, 90, -1000, -1000, -1000, -1000, 749, 302, -1000, 202,
	262, 797, 79, 31, 197, 128, -1000, -1000, -1000, -1000,
	-1000, 302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33,
	749, -1000, -1000, -1000, 29, 847, -1000, 193, -1000, -1000,
	-1000, -1000, -1000, -1000, 150, -1000, -1000, 116, -1000, 847,
	-1000,
}
var yyPgo = [...]int{

	0, 635, 633, 631, 629, 627, 626, 624, 623, 238,
	622, 621, 619, 6, 618, 617, 616, 612, 611, 610,
	608, 605, 604, 8, 603, 600, 599, 23, 597, 595,
	586, 585, 584, 581, 324, 579, 576, 575, 573, 19,
	571, 570, 568, 567, 566, 565, 562, 561, 559, 356,
	131, 556, 555, 554, 553, 551, 549, 548, 546, 543,
	534, 532, 531, 530, 528, 17, 527, 526, 524, 523,
	520, 519, 518, 22, 517, 4, 514, 513, 511, 509,
	507, 505, 499, 38, 498, 497, 496, 495, 494, 493,
	492, 489, 488, 486, 484, 7, 483, 26, 480, 479,
	478, 9, 475, 474, 225, 473, 470, 469, 12, 468,
	467, 465, 462, 39, 13, 459, 457, 456, 453, 20,
	451, 450, 444, 443, 5, 56, 442, 441, 440, 438,
	437, 436, 435, 434, 433, 430, 429, 428, 427, 426,
	424, 3, 423, 15, 422, 10, 419, 414, 413, 410,
	134, 409, 408, 406, 404, 11, 2, 403, 55, 399,
	395, 394, 393, 1, 390, 389, 388, 384, 383, 382,
	379, 377, 376, 0, 16, 373, 371, 363, 361, 360,
	359, 14, 358, 357, 355, 18, 351, 350,
}
var yyR1 = [...]int{

	0, 1, 2, 3, 3, 4, 4, 5, 5, 6,
	6, 7, 7, 8, 9, 10, 11, 12, 12, 12,
	12, 12, 13, 14, 15, 15, 16, 17, 18, 18,
	18, 19, 19, 20, 20, 21, 22, 23, 24, 25,
	25, 26, 26, 27, 28, 28, 29, 29, 30, 31,
	31, 32, 33, 33, 34, 34, 34, 35, 36, 36,
	37, 38, 38, 39, 40, 41, 42, 43, 44, 44,
	45, 46, 46, 47, 47, 48, 48, 49, 49, 50,
	51, 51, 52, 53, 54, 55, 55, 56, 56, 57,
	58, 59, 59, 60, 60, 61, 61, 62, 63, 63,
	64, 64, 64, 65, 66, 67, 67, 68, 69, 70,
	71, 72, 73, 74, 74, 75, 76, 76, 77, 77,
	78, 78, 79, 80, 80, 81, 81, 82, 83, 84,
	84, 85, 85, 86, 87, 87, 88, 89, 90, 91,
	91, 92, 93, 93, 93, 94, 95, 96, 96, 97,
	98, 99, 99, 99, 100, 100, 100, 100, 100, 100,
	101, 102, 102, 103, 103, 104, 105, 106, 106, 107,
	108, 109, 109, 110, 110, 110, 111, 111, 112, 113,
	114, 115, 115, 116, 116, 117, 118, 118, 119, 120,
	120, 121, 121, 122, 123, 124, 124, 124, 124, 124,
	124, 124, 124, 125, 126, 127, 127, 128, 128, 129,
	130, 131, 132, 133, 133, 134, 134, 135, 135, 136,
	137, 137, 138, 139, 139, 140, 141, 142, 143, 144,
	144, 145, 145, 145, 145, 145, 145, 146, 146, 147,
	147, 148, 148, 149, 149, 150, 151, 152, 152, 153,
	153, 154, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 156, 157, 157,
	158, 159, 159, 160, 160, 161, 162, 162, 162, 163,
	163, 163, 164, 165, 166, 167, 167, 168, 168, 169,
	170, 171, 171, 172, 172, 172, 172, 172, 172, 172,
	172, 173, 173, 174, 174, 175, 175, 176, 177, 177,
	178, 179, 179, 180, 180, 181, 181, 182, 183, 183,
	184, 184, 185, 186, 186, 187, 187,
}
var yyR2 = [...]int{

	0, 3, 3, 0, 3, 1, 2, 0, 2, 0,
	1, 0, 1, 1, 4, 3, 1, 1, 1, 1,
	1, 1, 3, 2, 0, 1, 1, 2, 1, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 2, 1,
	3, 0, 3, 2, 0, 3, 0, 1, 2, 0,
	1, 5, 0, 1, 1, 1, 1, 2, 1, 1,
	2, 0, 3, 1, 2, 1, 0, 3, 2, 1,
	6, 0, 2, 0, 1, 0, 2, 1, 3, 2,
	0, 3, 1, 1, 2, 2, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 0, 1, 3, 0, 1,
	1, 1, 1, 1, 4, 0, 1, 3, 1, 2,
	2, 2, 2, 0, 3, 5, 0, 2, 0, 2,
	1, 1, 2, 1, 3, 0, 3, 1, 2, 0,
	1, 1, 1, 2, 1, 1, 3, 1, 4, 0,
	3, 1, 1, 1, 1, 1, 2, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 4, 1, 1, 1,
	3, 0, 2, 0, 1, 5, 5, 0, 1, 3,
	1, 2, 1, 1, 1, 3, 1, 1, 2, 1,
	3, 0, 1, 0, 1, 2, 0, 3, 3, 0,
	2, 0, 1, 2, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 3, 3, 0, 1, 2, 2, 1,
	1, 1, 2, 0, 1, 2, 2, 1, 1, 2,
	0, 1, 4, 0, 2, 2, 3, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 5, 7, 0,
	1, 0, 1, 0, 1, 3, 4, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	4, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 3, 2, 1, 3, 0, 3, 2,
	2, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 6, 0, 2,
	6, 0, 2, 0, 2, 1, 2, 2, 1, 3,
	0, 3, 2, 2, 2, 0, 2,
}
var yyChk = [...]int{

	-1000, -154, -151, -112, 35, 52, -113, 7, -152, -153,
	-79, 32, -162, -34, -66, -105, -24, -166, -182, 28,
	21, 41, 42, 52, -80, -83, 44, -84, -85, 54,
	-113, 52, -69, -129, 7, -119, 44, -25, -27, 44,
	-73, 7, -167, -174, 44, -1, -169, 7, -183, -185,
	44, -73, -81, -82, 11, -143, -119, -108, 7, -120,
	-117, -114, -115, -73, -26, -28, -29, -163, -173, -172,
	44, 7, -125, -9, -158, -122, -70, -90, -150, -104,
	-17, -113, 47, 39, 53, 28, 33, 34, -18, 20,
	17, -74, -168, 43, -163, -184, -186, -163, 43, 45,
	-83, -67, -65, -13, 49, -144, -135, -119, -163, 44,
	-143, 45, -121, 46, -118, -116, 14, 45, -27, 43,
	-163, 54, -8, 48, -49, -181, -124, 12, -110, -32,
	-107, -99, -111, 44, -163, -130, -12, -22, -68, 7,
	-125, -173, 9, 6, 8, 10, 11, -100, 28, -9,
	-158, -150, -104, 47, 49, -11, -163, -143, 49, 47,
	-39, -163, 17, 20, 46, 45, -174, -163, 45, -185,
	-187, 43, -50, -49, 52, -156, -157, 7, -106, -65,
	46, -163, 52, -50, 45, 7, 48, -39, 5, -140,
	-88, -146, -164, -2, 54, 47, 44, -181, -49, -163,
	44, 54, -101, 49, -143, 14, -159, -91, -94, -163,
	7, 52, 52, -50, -51, 50, -155, -34, -98, -145,
	-71, -136, -14, -30, -72, -53, -13, -75, -160, -138,
	-62, -35, -97, -42, -52, -141, -86, -10, -142, 29,
	37, 18, 22, 30, 26, 31, -45, -178, 38, 27,
	24, 7, -49, -16, -50, -73, 40, -114, -39, -49,
	7, 44, -49, -147, -149, -3, -4, -50, -163, 45,
	-49, -108, -102, -37, -95, -96, -93, -57, -49, -101,
	7, -65, 48, 50, -54, -55, -73, -40, -41, 53,
	50, -109, -108, -92, 7, -173, 48, 46, 52, 51,
	-49, -137, -50, -15, -97, 7, -31, -97, -97, -76,
	-145, 7, 49, -63, -64, -23, -58, -126, -49, -59,
	-127, -89, -128, -145, -50, -73, -49, -87, 13, 15,
	17, 4, 16, -46, -179, -145, -163, 48, 51, 51,
	45, -6, 14, -5, 46, -33, 46, 50, -103, 46,
	-38, -36, -49, -101, 51, -39, 52, -56, -161, 11,
	-163, -173, 52, -143, -39, -49, -155, -49, 52, -139,
	-13, 52, 36, 43, 16, -49, -50, -50, -47, -49,
	-176, -177, 7, 52, 45, -148, -49, -49, -7, 46,
	-50, 45, 46, -13, 50, -21, -19, 19, 23, -60,
	-23, -49, -49, 49, 49, -124, 16, 48, 51, -95,
	-77, 25, 51, -20, -141, -132, -133, -49, -134, -50,
	-73, 52, -48, -180, 54, -49, -78, -75, -13, -156,
	-131, -49, 43, 16, -61, -123, -145, 50, -43, -44,
	19, 23, 50, -165, -175, 19, 23, 44, 48, 51,
	-50, 51, -170, -163, 41, -156, -156, -171, 45, 46,
	-163,
}
var yyDef = [...]int{

	0, -2, 251, 0, 0, 247, 178, 179, 249, 246,
	0, 129, 0, 276, 277, 278, 54, 55, 56, 0,
	0, 0, 0, 248, 122, 123, 125, 0, 130, 131,
	132, 250, 0, 0, 108, 209, -2, 38, 39, 41,
	-2, 113, 284, 285, 287, 303, 304, 0, 317, 318,
	320, 0, 129, 128, 127, 105, 229, 0, 170, 0,
	191, 186, 183, 182, 0, 43, 0, 47, 279, 280,
	0, -2, 302, 293, 294, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 28,
	0, 112, 0, 0, 289, 0, 322, 325, 0, 124,
	0, 104, 106, 103, 268, 228, 230, 217, 218, -2,
	167, 188, 190, 192, 185, 0, 184, 40, 0, 0,
	0, 0, 0, 0, 13, 77, 315, 0, 195, 196,
	197, 173, 174, 0, 210, 0, 151, 152, 153, 176,
	177, -2, 17, 18, 19, 20, 21, 0, 0, -2,
	-2, -2, -2, 0, 271, 193, 16, 109, 139, 0,
	27, 63, 29, 30, 0, 286, 0, 1, 319, 0,
	323, 0, 324, 80, 126, 0, -2, -2, 166, 168,
	181, 180, 42, 45, 281, 203, 0, 245, 0, 198,
	199, 200, 201, 202, 0, 239, 3, 316, 0, 210,
	0, 0, 36, 161, 109, 0, 0, 0, 0, 145,
	114, 288, 321, 326, 79, 22, 0, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 0, 231, 232, 233, 234, 235, 236, 0,
	220, 24, 49, 0, 83, 66, 273, 274, 0, -2,
	0, -2, -2, 0, 0, 0, -2, 187, 14, 78,
	225, 0, 240, 0, 0, 0, 9, 5, -2, 175,
	52, 169, 0, 163, 61, 0, 0, 142, 143, 144,
	-2, 107, 0, 270, 0, 87, 0, 86, 0, 65,
	138, 0, 0, 172, -2, 141, 0, 0, 269, 66,
	110, 219, 221, 23, 25, 149, 48, 50, 111, 0,
	0, -2, 223, 0, 99, 100, 101, 102, -2, 0,
	0, 92, 206, 137, 0, 0, 57, 133, 134, 135,
	0, 0, 0, 73, 308, 0, 0, 136, 241, 0,
	2, 11, 10, 6, 0, 0, 53, 160, 162, 164,
	60, 146, 58, 59, 148, 156, 272, 84, 88, 275,
	85, 64, 140, 171, 165, 81, 150, 0, 117, 0,
	97, 93, 0, 207, 208, 226, 15, 227, 0, 74,
	0, 0, 0, 72, 282, 0, 242, 0, 4, 12,
	8, 51, 0, 118, 222, 224, 0, 0, 32, 0,
	94, 37, 204, 75, 313, 0, 309, 237, 0, 62,
	115, 0, 268, 31, 33, 34, 0, -2, 214, 0,
	0, 66, 0, 0, 0, 0, 119, 120, 121, 35,
	212, 211, 215, 216, 90, 96, 194, 70, 76, 0,
	0, 69, 310, 314, 0, 0, 306, 0, 238, 268,
	68, 268, 305, 291, 0, 67, 283, 290, 307, 0,
	292,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	44, 45, 53, 3, 46, 3, 54, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 51, 52,
	3, 43, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 47, 3, 48, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 49, 3, 50,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:289
		{
			yyVAL.item = []AliasDecl{yyDollar[1].item, "=", yyDollar[3].item} //TODO 1
		}
	case 2:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:295
		{
			yyVAL.item = []Arguments{"(", yyDollar[2].item, ")"} //TODO 2
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:301
		{
			yyVAL.item = nil //TODO 3
		}
	case 4:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:305
		{
			yyVAL.item = []Arguments1{yyDollar[1].item, yyDollar[2].item, yyDollar[3].item} //TODO 4
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:311
		{
			yyVAL.item = yyDollar[1].item //TODO 5
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:315
		{
			yyVAL.item = []Arguments11{yyDollar[1].item, yyDollar[2].item} //TODO 6
		}
	case 7:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:321
		{
			yyVAL.item = nil //TODO 7
		}
	case 8:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:325
		{
			yyVAL.item = []Arguments111{",", yyDollar[2].item} //TODO 8
		}
	case 9:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:331
		{
			yyVAL.item = nil //TODO 9
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:335
		{
			yyVAL.item = "..." //TODO 10
		}
	case 11:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:341
		{
			yyVAL.item = nil //TODO 11
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:345
		{
			yyVAL.item = "," //TODO 12
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:351
		{
			yyVAL.item = yyDollar[1].item //TODO 13
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:357
		{
			yyVAL.item = []ArrayType{"[", yyDollar[2].item, "]", yyDollar[4].item} //TODO 14
		}
	case 15:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:363
		{
			yyVAL.item = []Assignment{yyDollar[1].item, yyDollar[2].item, yyDollar[3].item} //TODO 15
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:369
		{
			yyVAL.item = yyDollar[1].item //TODO 16
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:375
		{
			yyVAL.item = yyDollar[1].item //TODO 17
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:379
		{
			yyVAL.item = yyDollar[1].item //TODO 18
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:383
		{
			yyVAL.item = yyDollar[1].item //TODO 19
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:387
		{
			yyVAL.item = yyDollar[1].item //TODO 20
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:391
		{
			yyVAL.item = yyDollar[1].item //TODO 21
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:397
		{
			yyVAL.item = []Block{"{", yyDollar[2].item, "}"} //TODO 22
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:403
		{
			yyVAL.item = []BreakStmt{"break", yyDollar[2].item} //TODO 23
		}
	case 24:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:409
		{
			yyVAL.item = nil //TODO 24
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:413
		{
			yyVAL.item = yyDollar[1].item //TODO 25
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:419
		{
			yyVAL.item = yyDollar[1].item //TODO 26
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:425
		{
			yyVAL.item = []ChannelType{yyDollar[1].item, yyDollar[2].item} //TODO 27
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:431
		{
			yyVAL.item = "chan" //TODO 28
		}
	case 29:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:435
		{
			yyVAL.item = []ChannelType1{"chan", "<-"} //TODO 29
		}
	case 30:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:439
		{
			yyVAL.item = []ChannelType1{"<-", "chan"} //TODO 30
		}
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:445
		{
			yyVAL.item = []CommCase{"case", yyDollar[2].item} //TODO 31
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:449
		{
			yyVAL.item = "default" //TODO 32
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:455
		{
			yyVAL.item = yyDollar[1].item //TODO 33
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:459
		{
			yyVAL.item = yyDollar[1].item //TODO 34
		}
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:465
		{
			yyVAL.item = []CommClause{yyDollar[1].item, ":", yyDollar[3].item} //TODO 35
		}
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:471
		{
			yyVAL.item = []CompositeLit{yyDollar[1].item, yyDollar[2].item} //TODO 36
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:477
		{
			yyVAL.item = yyDollar[1].item //TODO 37
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:483
		{
			yyVAL.item = []ConstDecl{"const", yyDollar[2].item} //TODO 38
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:489
		{
			yyVAL.item = yyDollar[1].item //TODO 39
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:493
		{
			yyVAL.item = []ConstDecl1{"(", yyDollar[2].item, ")"} //TODO 40
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:499
		{
			yyVAL.item = []ConstDecl11(nil) //TODO 41
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:503
		{
			yyVAL.item = append(yyDollar[1].item.([]ConstDecl11), yyDollar[2].item, ";") //TODO 42
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:509
		{
			yyVAL.item = []ConstSpec{yyDollar[1].item, yyDollar[2].item} //TODO 43
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:515
		{
			yyVAL.item = nil //TODO 44
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:519
		{
			yyVAL.item = []ConstSpec1{yyDollar[1].item, "=", yyDollar[3].item} //TODO 45
		}
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:525
		{
			yyVAL.item = nil //TODO 46
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:529
		{
			yyVAL.item = yyDollar[1].item //TODO 47
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:535
		{
			yyVAL.item = []ContinueStmt{"continue", yyDollar[2].item} //TODO 48
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:541
		{
			yyVAL.item = nil //TODO 49
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:545
		{
			yyVAL.item = yyDollar[1].item //TODO 50
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:551
		{
			yyVAL.item = []Conversion{yyDollar[1].item, "(", yyDollar[3].item, yyDollar[4].item, ")"} //TODO 51
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:557
		{
			yyVAL.item = nil //TODO 52
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:561
		{
			yyVAL.item = "," //TODO 53
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:567
		{
			yyVAL.item = yyDollar[1].item //TODO 54
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:571
		{
			yyVAL.item = yyDollar[1].item //TODO 55
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:575
		{
			yyVAL.item = yyDollar[1].item //TODO 56
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:581
		{
			yyVAL.item = []DeferStmt{"defer", yyDollar[2].item} //TODO 57
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:587
		{
			yyVAL.item = yyDollar[1].item //TODO 58
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:591
		{
			yyVAL.item = yyDollar[1].item //TODO 59
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:597
		{
			yyVAL.item = []ElementList{yyDollar[1].item, yyDollar[2].item} //TODO 60
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:603
		{
			yyVAL.item = []ElementList1(nil) //TODO 61
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:607
		{
			yyVAL.item = append(yyDollar[1].item.([]ElementList1), ",", yyDollar[3].item) //TODO 62
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:613
		{
			yyVAL.item = yyDollar[1].item //TODO 63
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:619
		{
			yyVAL.item = []EmbeddedField{yyDollar[1].item, yyDollar[2].item} //TODO 64
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:625
		{
			yyVAL.item = "*" //TODO 66
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:631
		{
			yyVAL.item = nil //TODO 67
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:637
		{
			yyVAL.item = []ExprCaseClause{yyDollar[1].item, ":", yyDollar[3].item} //TODO 68
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:643
		{
			yyVAL.item = []ExprSwitchCase{"case", yyDollar[2].item} //TODO 69
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:647
		{
			yyVAL.item = "default" //TODO 70
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line grammar.y:653
		{
			yyVAL.item = []ExprSwitchStmt{"switch", yyDollar[2].item, yyDollar[3].item, "{", yyDollar[5].item, "}"} //TODO 71
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:659
		{
			yyVAL.item = nil //TODO 72
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:663
		{
			yyVAL.item = []ExprSwitchStmt1{yyDollar[1].item, ";"} //TODO 73
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:669
		{
			yyVAL.item = nil //TODO 74
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:673
		{
			yyVAL.item = yyDollar[1].item //TODO 75
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:679
		{
			yyVAL.item = []ExprSwitchStmt3(nil) //TODO 76
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:683
		{
			yyVAL.item = append(yyDollar[1].item.([]ExprSwitchStmt3), yyDollar[2].item) //TODO 77
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:689
		{
			yyVAL.item = yyDollar[1].item //TODO 78
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:693
		{
			yyVAL.item = []Expression{yyDollar[1].item, yyDollar[2].item, yyDollar[3].item} //TODO 79
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:699
		{
			yyVAL.item = []ExpressionList{yyDollar[1].item, yyDollar[2].item} //TODO 80
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:705
		{
			yyVAL.item = []ExpressionList1(nil) //TODO 81
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:709
		{
			yyVAL.item = append(yyDollar[1].item.([]ExpressionList1), ",", yyDollar[3].item) //TODO 82
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:715
		{
			yyVAL.item = yyDollar[1].item //TODO 83
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:721
		{
			yyVAL.item = "fallthrough" //TODO 84
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:727
		{
			yyVAL.item = []FieldDecl{yyDollar[1].item, yyDollar[2].item} //TODO 85
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:733
		{
			yyVAL.item = []FieldDecl1{yyDollar[1].item, yyDollar[2].item} //TODO 86
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:737
		{
			yyVAL.item = yyDollar[1].item //TODO 87
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:743
		{
			yyVAL.item = nil //TODO 88
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:747
		{
			yyVAL.item = yyDollar[1].item //TODO 89
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:753
		{
			yyVAL.item = yyDollar[1].item //TODO 90
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:759
		{
			yyVAL.item = []ForClause{yyDollar[1].item, ";", yyDollar[3].item, ";", yyDollar[5].item} //TODO 91
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:765
		{
			yyVAL.item = nil //TODO 92
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:769
		{
			yyVAL.item = yyDollar[1].item //TODO 93
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:775
		{
			yyVAL.item = nil //TODO 94
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:779
		{
			yyVAL.item = yyDollar[1].item //TODO 95
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:785
		{
			yyVAL.item = nil //TODO 96
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:789
		{
			yyVAL.item = yyDollar[1].item //TODO 97
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:795
		{
			yyVAL.item = []ForStmt{"for", yyDollar[2].item, yyDollar[3].item} //TODO 98
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:801
		{
			yyVAL.item = nil //TODO 99
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:805
		{
			yyVAL.item = yyDollar[1].item //TODO 100
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:811
		{
			yyVAL.item = yyDollar[1].item //TODO 101
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:815
		{
			yyVAL.item = yyDollar[1].item //TODO 102
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:819
		{
			yyVAL.item = yyDollar[1].item //TODO 103
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:825
		{
			yyVAL.item = yyDollar[1].item //TODO 104
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:831
		{
			yyVAL.item = []FunctionDecl{"func", yyDollar[2].item, yyDollar[3].item, yyDollar[4].item} //TODO 105
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:837
		{
			yyVAL.item = nil //TODO 106
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:841
		{
			yyVAL.item = yyDollar[1].item //TODO 107
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:847
		{
			yyVAL.item = []FunctionLit{"func", yyDollar[2].item, yyDollar[3].item} //TODO 108
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:853
		{
			yyVAL.item = yyDollar[1].item //TODO 109
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:859
		{
			yyVAL.item = []FunctionType{"func", yyDollar[2].item} //TODO 110
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:865
		{
			yyVAL.item = []GoStmt{"go", yyDollar[2].item} //TODO 111
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:871
		{
			yyVAL.item = []GotoStmt{"goto", yyDollar[2].item} //TODO 112
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:877
		{
			yyVAL.item = []IdentifierList{yyDollar[1].item, yyDollar[2].item} //TODO 113
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:883
		{
			yyVAL.item = []IdentifierList1(nil) //TODO 114
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:887
		{
			yyVAL.item = append(yyDollar[1].item.([]IdentifierList1), ",", yyDollar[3].item) //TODO 115
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:893
		{
			yyVAL.item = []IfStmt{"if", yyDollar[2].item, yyDollar[3].item, yyDollar[4].item, yyDollar[5].item} //TODO 116
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:899
		{
			yyVAL.item = nil //TODO 117
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:903
		{
			yyVAL.item = []IfStmt1{yyDollar[1].item, ";"} //TODO 118
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:909
		{
			yyVAL.item = nil //TODO 119
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:913
		{
			yyVAL.item = []IfStmt2{"else", yyDollar[2].item} //TODO 120
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:919
		{
			yyVAL.item = yyDollar[1].item //TODO 121
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:923
		{
			yyVAL.item = yyDollar[1].item //TODO 122
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:929
		{
			yyVAL.item = []ImportDecl{"import", yyDollar[2].item} //TODO 123
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:935
		{
			yyVAL.item = yyDollar[1].item //TODO 124
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:939
		{
			yyVAL.item = []ImportDecl1{"(", yyDollar[2].item, ")"} //TODO 125
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:945
		{
			yyVAL.item = []ImportDecl11(nil) //TODO 126
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:949
		{
			yyVAL.item = append(yyDollar[1].item.([]ImportDecl11), yyDollar[2].item, ";") //TODO 127
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:955
		{
			yyVAL.item = yyDollar[1].item //TODO 128
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:961
		{
			yyVAL.item = []ImportSpec{yyDollar[1].item, yyDollar[2].item} //TODO 129
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:967
		{
			yyVAL.item = nil //TODO 130
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:971
		{
			yyVAL.item = yyDollar[1].item //TODO 131
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:977
		{
			yyVAL.item = "." //TODO 132
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:981
		{
			yyVAL.item = yyDollar[1].item //TODO 133
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:987
		{
			yyVAL.item = []IncDecStmt{yyDollar[1].item, yyDollar[2].item} //TODO 134
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:993
		{
			yyVAL.item = "++" //TODO 135
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:997
		{
			yyVAL.item = "--" //TODO 136
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1003
		{
			yyVAL.item = []Index{"[", yyDollar[2].item, "]"} //TODO 137
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1009
		{
			yyVAL.item = yyDollar[1].item //TODO 138
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1015
		{
			yyVAL.item = []InterfaceType{"interface", "{", yyDollar[3].item, "}"} //TODO 139
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1021
		{
			yyVAL.item = []InterfaceType1(nil) //TODO 140
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1025
		{
			yyVAL.item = append(yyDollar[1].item.([]InterfaceType1), yyDollar[2].item, ";") //TODO 141
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1031
		{
			yyVAL.item = yyDollar[1].item //TODO 142
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1037
		{
			yyVAL.item = yyDollar[1].item //TODO 143
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1041
		{
			yyVAL.item = yyDollar[1].item //TODO 144
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1045
		{
			yyVAL.item = yyDollar[1].item //TODO 145
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1051
		{
			yyVAL.item = yyDollar[1].item //TODO 146
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1057
		{
			yyVAL.item = []KeyedElement{yyDollar[1].item, yyDollar[2].item} //TODO 147
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1063
		{
			yyVAL.item = nil //TODO 148
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1067
		{
			yyVAL.item = []KeyedElement1{yyDollar[1].item, ":"} //TODO 149
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1073
		{
			yyVAL.item = yyDollar[1].item //TODO 150
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1079
		{
			yyVAL.item = []LabeledStmt{yyDollar[1].item, ":", yyDollar[3].item} //TODO 151
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1085
		{
			yyVAL.item = yyDollar[1].item //TODO 152
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1089
		{
			yyVAL.item = yyDollar[1].item //TODO 153
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1093
		{
			yyVAL.item = yyDollar[1].item //TODO 154
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1099
		{
			yyVAL.item = yyDollar[1].item //TODO 155
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1103
		{
			yyVAL.item = yyDollar[1].item //TODO 156
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1107
		{
			yyVAL.item = []LiteralType{"[", "...", "]", yyDollar[4].item} //TODO 157
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1111
		{
			yyVAL.item = yyDollar[1].item //TODO 158
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1115
		{
			yyVAL.item = yyDollar[1].item //TODO 159
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1119
		{
			yyVAL.item = yyDollar[1].item //TODO 160
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1125
		{
			yyVAL.item = []LiteralValue{"{", yyDollar[2].item, "}"} //TODO 161
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1131
		{
			yyVAL.item = nil //TODO 162
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1135
		{
			yyVAL.item = []LiteralValue1{yyDollar[1].item, yyDollar[2].item} //TODO 163
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1141
		{
			yyVAL.item = nil //TODO 164
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1145
		{
			yyVAL.item = "," //TODO 165
		}
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:1151
		{
			yyVAL.item = []MapType{"map", "[", yyDollar[3].item, "]", yyDollar[5].item} //TODO 166
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:1157
		{
			yyVAL.item = []MethodDecl{"func", yyDollar[2].item, yyDollar[3].item, yyDollar[4].item, yyDollar[5].item} //TODO 167
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1163
		{
			yyVAL.item = nil //TODO 168
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1167
		{
			yyVAL.item = yyDollar[1].item //TODO 169
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1173
		{
			yyVAL.item = []MethodExpr{yyDollar[1].item, ".", yyDollar[3].item} //TODO 170
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1179
		{
			yyVAL.item = yyDollar[1].item //TODO 171
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1185
		{
			yyVAL.item = []MethodSpec{yyDollar[1].item, yyDollar[2].item} //TODO 172
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1189
		{
			yyVAL.item = yyDollar[1].item //TODO 173
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1195
		{
			yyVAL.item = yyDollar[1].item //TODO 174
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1199
		{
			yyVAL.item = yyDollar[1].item //TODO 175
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1203
		{
			yyVAL.item = []Operand{"(", yyDollar[2].item, ")"} //TODO 176
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1209
		{
			yyVAL.item = yyDollar[1].item //TODO 177
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1213
		{
			yyVAL.item = yyDollar[1].item //TODO 178
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1219
		{
			yyVAL.item = []PackageClause{"package", yyDollar[2].item} //TODO 179
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1225
		{
			yyVAL.item = yyDollar[1].item //TODO 180
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1231
		{
			yyVAL.item = []ParameterDecl{yyDollar[1].item, yyDollar[2].item, yyDollar[3].item} //TODO 181
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1237
		{
			yyVAL.item = nil //TODO 182
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1241
		{
			yyVAL.item = yyDollar[1].item //TODO 183
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1247
		{
			yyVAL.item = nil //TODO 184
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1251
		{
			yyVAL.item = "..." //TODO 185
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1257
		{
			yyVAL.item = []ParameterList{yyDollar[1].item, yyDollar[2].item} //TODO 186
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1263
		{
			yyVAL.item = []ParameterList1(nil) //TODO 187
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1267
		{
			yyVAL.item = append(yyDollar[1].item.([]ParameterList1), ",", yyDollar[3].item) //TODO 188
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1273
		{
			yyVAL.item = []Parameters{"(", yyDollar[2].item, ")"} //TODO 189
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1279
		{
			yyVAL.item = nil //TODO 190
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1283
		{
			yyVAL.item = []Parameters1{yyDollar[1].item, yyDollar[2].item} //TODO 191
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1289
		{
			yyVAL.item = nil //TODO 192
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1293
		{
			yyVAL.item = "," //TODO 193
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1299
		{
			yyVAL.item = []PointerType{"*", yyDollar[2].item} //TODO 194
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1305
		{
			yyVAL.item = yyDollar[1].item //TODO 195
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1311
		{
			yyVAL.item = yyDollar[1].item //TODO 196
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1315
		{
			yyVAL.item = yyDollar[1].item //TODO 197
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1319
		{
			yyVAL.item = yyDollar[1].item //TODO 198
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1323
		{
			yyVAL.item = []PrimaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 199
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1327
		{
			yyVAL.item = []PrimaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 200
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1331
		{
			yyVAL.item = []PrimaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 201
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1335
		{
			yyVAL.item = []PrimaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 202
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1339
		{
			yyVAL.item = []PrimaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 203
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1345
		{
			yyVAL.item = []QualifiedIdent{yyDollar[1].item, ".", yyDollar[3].item} //TODO 204
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1351
		{
			yyVAL.item = []RangeClause{yyDollar[1].item, "range", yyDollar[3].item} //TODO 205
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1357
		{
			yyVAL.item = nil //TODO 206
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1361
		{
			yyVAL.item = yyDollar[1].item //TODO 207
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1367
		{
			yyVAL.item = []RangeClause11{yyDollar[1].item, "="} //TODO 208
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1371
		{
			yyVAL.item = []RangeClause11{yyDollar[1].item, ":="} //TODO 209
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1377
		{
			yyVAL.item = yyDollar[1].item //TODO 210
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1383
		{
			yyVAL.item = yyDollar[1].item //TODO 211
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1389
		{
			yyVAL.item = yyDollar[1].item //TODO 212
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1395
		{
			yyVAL.item = []RecvStmt{yyDollar[1].item, yyDollar[2].item} //TODO 213
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1401
		{
			yyVAL.item = nil //TODO 214
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1405
		{
			yyVAL.item = yyDollar[1].item //TODO 215
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1411
		{
			yyVAL.item = []RecvStmt11{yyDollar[1].item, "="} //TODO 216
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1415
		{
			yyVAL.item = []RecvStmt11{yyDollar[1].item, ":="} //TODO 217
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1421
		{
			yyVAL.item = yyDollar[1].item //TODO 218
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1425
		{
			yyVAL.item = yyDollar[1].item //TODO 219
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1431
		{
			yyVAL.item = []ReturnStmt{"return", yyDollar[2].item} //TODO 220
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1437
		{
			yyVAL.item = nil //TODO 221
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1441
		{
			yyVAL.item = yyDollar[1].item //TODO 222
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1447
		{
			yyVAL.item = []SelectStmt{"select", "{", yyDollar[3].item, "}"} //TODO 223
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1453
		{
			yyVAL.item = []SelectStmt1(nil) //TODO 224
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1457
		{
			yyVAL.item = append(yyDollar[1].item.([]SelectStmt1), yyDollar[2].item) //TODO 225
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1463
		{
			yyVAL.item = []Selector{".", yyDollar[2].item} //TODO 226
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1469
		{
			yyVAL.item = []SendStmt{yyDollar[1].item, "<-", yyDollar[3].item} //TODO 227
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1475
		{
			yyVAL.item = []ShortVarDecl{yyDollar[1].item, ":=", yyDollar[3].item} //TODO 228
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1481
		{
			yyVAL.item = []Signature{yyDollar[1].item, yyDollar[2].item} //TODO 229
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1487
		{
			yyVAL.item = nil //TODO 230
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1491
		{
			yyVAL.item = yyDollar[1].item //TODO 231
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1497
		{
			yyVAL.item = yyDollar[1].item //TODO 232
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1501
		{
			yyVAL.item = yyDollar[1].item //TODO 233
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1505
		{
			yyVAL.item = yyDollar[1].item //TODO 234
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1509
		{
			yyVAL.item = yyDollar[1].item //TODO 235
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1513
		{
			yyVAL.item = yyDollar[1].item //TODO 236
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1517
		{
			yyVAL.item = yyDollar[1].item //TODO 237
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line grammar.y:1523
		{
			yyVAL.item = []Slice{"[", yyDollar[2].item, ":", yyDollar[4].item, "]"} //TODO 238
		}
	case 238:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line grammar.y:1527
		{
			yyVAL.item = []Slice{"[", yyDollar[2].item, ":", yyDollar[4].item, ":", yyDollar[6].item, "]"} //TODO 239
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1533
		{
			yyVAL.item = nil //TODO 240
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1537
		{
			yyVAL.item = yyDollar[1].item //TODO 241
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1543
		{
			yyVAL.item = nil //TODO 242
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1547
		{
			yyVAL.item = yyDollar[1].item //TODO 243
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1553
		{
			yyVAL.item = nil //TODO 244
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1557
		{
			yyVAL.item = yyDollar[1].item //TODO 245
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1563
		{
			yyVAL.item = []SliceType{"[", "]", yyDollar[3].item} //TODO 246
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1569
		{
			yyVAL.item = []SourceFile{yyDollar[1].item, ";", yyDollar[3].item, yyDollar[4].item} //TODO 247
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1575
		{
			yyVAL.item = []SourceFile1(nil) //TODO 248
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1579
		{
			yyVAL.item = append(yyDollar[1].item.([]SourceFile1), yyDollar[2].item, ";") //TODO 249
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1585
		{
			yyVAL.item = []SourceFile2(nil) //TODO 250
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1589
		{
			yyVAL.item = append(yyDollar[1].item.([]SourceFile2), yyDollar[2].item, ";") //TODO 251
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1595
		{
			_parserResult = yyDollar[1].item //TODO 252
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1601
		{
			yyVAL.item = yyDollar[1].item //TODO 253
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1605
		{
			yyVAL.item = yyDollar[1].item //TODO 254
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1609
		{
			yyVAL.item = yyDollar[1].item //TODO 255
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1613
		{
			yyVAL.item = yyDollar[1].item //TODO 256
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1617
		{
			yyVAL.item = yyDollar[1].item //TODO 257
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1621
		{
			yyVAL.item = yyDollar[1].item //TODO 258
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1625
		{
			yyVAL.item = yyDollar[1].item //TODO 259
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1629
		{
			yyVAL.item = yyDollar[1].item //TODO 260
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1633
		{
			yyVAL.item = yyDollar[1].item //TODO 261
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1637
		{
			yyVAL.item = yyDollar[1].item //TODO 262
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1641
		{
			yyVAL.item = yyDollar[1].item //TODO 263
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1645
		{
			yyVAL.item = yyDollar[1].item //TODO 264
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1649
		{
			yyVAL.item = yyDollar[1].item //TODO 265
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1653
		{
			yyVAL.item = yyDollar[1].item //TODO 266
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1657
		{
			yyVAL.item = yyDollar[1].item //TODO 267
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1663
		{
			yyVAL.item = yyDollar[1].item //TODO 268
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1669
		{
			yyVAL.item = []StatementList1(nil) //TODO 269
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1673
		{
			yyVAL.item = append(yyDollar[1].item.([]StatementList1), yyDollar[2].item, ";") //TODO 270
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1679
		{
			yyVAL.item = []StructType{"struct", "{", yyDollar[3].item, "}"} //TODO 271
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1685
		{
			yyVAL.item = []StructType1(nil) //TODO 272
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1689
		{
			yyVAL.item = append(yyDollar[1].item.([]StructType1), yyDollar[2].item, ";") //TODO 273
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1695
		{
			yyVAL.item = yyDollar[1].item //TODO 274
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1699
		{
			yyVAL.item = yyDollar[1].item //TODO 275
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1705
		{
			yyVAL.item = yyDollar[1].item //TODO 276
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1711
		{
			yyVAL.item = yyDollar[1].item //TODO 277
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1715
		{
			yyVAL.item = yyDollar[1].item //TODO 278
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1719
		{
			yyVAL.item = yyDollar[1].item //TODO 279
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1725
		{
			yyVAL.item = yyDollar[1].item //TODO 280
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1729
		{
			yyVAL.item = yyDollar[1].item //TODO 281
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1733
		{
			yyVAL.item = []Type{"(", yyDollar[2].item, ")"} //TODO 282
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line grammar.y:1739
		{
			yyVAL.item = []TypeAssertion{".", "(", yyDollar[3].item, ")"} //TODO 283
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1745
		{
			yyVAL.item = []TypeCaseClause{yyDollar[1].item, ":", yyDollar[3].item} //TODO 284
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1751
		{
			yyVAL.item = []TypeDecl{"type", yyDollar[2].item} //TODO 285
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1757
		{
			yyVAL.item = yyDollar[1].item //TODO 286
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1761
		{
			yyVAL.item = []TypeDecl1{"(", yyDollar[2].item, ")"} //TODO 287
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1767
		{
			yyVAL.item = []TypeDecl11(nil) //TODO 288
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1771
		{
			yyVAL.item = append(yyDollar[1].item.([]TypeDecl11), yyDollar[2].item, ";") //TODO 289
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1777
		{
			yyVAL.item = []TypeDef{yyDollar[1].item, yyDollar[2].item} //TODO 290
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1783
		{
			yyVAL.item = []TypeList{yyDollar[1].item, yyDollar[2].item} //TODO 291
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1789
		{
			yyVAL.item = []TypeList1(nil) //TODO 292
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1793
		{
			yyVAL.item = append(yyDollar[1].item.([]TypeList1), ",", yyDollar[3].item) //TODO 293
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1799
		{
			yyVAL.item = yyDollar[1].item //TODO 294
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1803
		{
			yyVAL.item = yyDollar[1].item //TODO 295
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1807
		{
			yyVAL.item = yyDollar[1].item //TODO 296
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1811
		{
			yyVAL.item = yyDollar[1].item //TODO 297
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1815
		{
			yyVAL.item = yyDollar[1].item //TODO 298
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1819
		{
			yyVAL.item = yyDollar[1].item //TODO 299
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1823
		{
			yyVAL.item = yyDollar[1].item //TODO 300
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1827
		{
			yyVAL.item = yyDollar[1].item //TODO 301
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1833
		{
			yyVAL.item = yyDollar[1].item //TODO 302
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1837
		{
			yyVAL.item = yyDollar[1].item //TODO 303
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1843
		{
			yyVAL.item = yyDollar[1].item //TODO 304
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1847
		{
			yyVAL.item = yyDollar[1].item //TODO 305
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1853
		{
			yyVAL.item = []TypeSwitchCase{"case", yyDollar[2].item} //TODO 306
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1857
		{
			yyVAL.item = "default" //TODO 307
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line grammar.y:1863
		{
			yyVAL.item = []TypeSwitchGuard{yyDollar[1].item, yyDollar[2].item, ".", "(", "type", ")"} //TODO 308
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1869
		{
			yyVAL.item = nil //TODO 309
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1873
		{
			yyVAL.item = []TypeSwitchGuard1{yyDollar[1].item, ":="} //TODO 310
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line grammar.y:1879
		{
			yyVAL.item = []TypeSwitchStmt{"switch", yyDollar[2].item, yyDollar[3].item, "{", yyDollar[5].item, "}"} //TODO 311
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1885
		{
			yyVAL.item = nil //TODO 312
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1889
		{
			yyVAL.item = []TypeSwitchStmt1{yyDollar[1].item, ";"} //TODO 313
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1895
		{
			yyVAL.item = []TypeSwitchStmt2(nil) //TODO 314
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1899
		{
			yyVAL.item = append(yyDollar[1].item.([]TypeSwitchStmt2), yyDollar[2].item) //TODO 315
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1905
		{
			yyVAL.item = yyDollar[1].item //TODO 316
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1909
		{
			yyVAL.item = []UnaryExpr{yyDollar[1].item, yyDollar[2].item} //TODO 317
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1915
		{
			yyVAL.item = []VarDecl{"var", yyDollar[2].item} //TODO 318
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line grammar.y:1921
		{
			yyVAL.item = yyDollar[1].item //TODO 319
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1925
		{
			yyVAL.item = []VarDecl1{"(", yyDollar[2].item, ")"} //TODO 320
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1931
		{
			yyVAL.item = []VarDecl11(nil) //TODO 321
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line grammar.y:1935
		{
			yyVAL.item = append(yyDollar[1].item.([]VarDecl11), yyDollar[2].item, ";") //TODO 322
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1941
		{
			yyVAL.item = []VarSpec{yyDollar[1].item, yyDollar[2].item} //TODO 323
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1947
		{
			yyVAL.item = []VarSpec1{yyDollar[1].item, yyDollar[2].item} //TODO 324
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1951
		{
			yyVAL.item = []VarSpec1{"=", yyDollar[2].item} //TODO 325
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line grammar.y:1957
		{
			yyVAL.item = nil //TODO 326
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line grammar.y:1961
		{
			yyVAL.item = []VarSpec11{"=", yyDollar[2].item} //TODO 327
		}
	}
	goto yystack /* stack new state and value */
}
