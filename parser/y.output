
state 0
	$accept: .Start $end 

	PACKAGE  shift 4
	.  error

	PackageClause  goto 3
	SourceFile  goto 2
	Start  goto 1

state 1
	$accept:  Start.$end 

	$end  accept
	.  error


state 2
	Start:  SourceFile.    (251)

	.  reduce 251 (src line 1593)


state 3
	SourceFile:  PackageClause.';' SourceFile1 SourceFile2 

	';'  shift 5
	.  error


state 4
	PackageClause:  PACKAGE.PackageName 

	IDENTIFIER  shift 7
	.  error

	PackageName  goto 6

state 5
	SourceFile:  PackageClause ';'.SourceFile1 SourceFile2 
	SourceFile1: .    (247)

	.  reduce 247 (src line 1573)

	SourceFile1  goto 8

state 6
	PackageClause:  PACKAGE PackageName.    (178)

	.  reduce 178 (src line 1217)


state 7
	PackageName:  IDENTIFIER.    (179)

	.  reduce 179 (src line 1223)


state 8
	SourceFile:  PackageClause ';' SourceFile1.SourceFile2 
	SourceFile1:  SourceFile1.ImportDecl ';' 
	SourceFile2: .    (249)

	IMPORT  shift 11
	.  reduce 249 (src line 1583)

	ImportDecl  goto 10
	SourceFile2  goto 9

state 9
	SourceFile:  PackageClause ';' SourceFile1 SourceFile2.    (246)
	SourceFile2:  SourceFile2.TopLevelDecl ';' 

	CONST  shift 20
	FUNC  shift 19
	TYPE  shift 21
	VAR  shift 22
	.  reduce 246 (src line 1567)

	ConstDecl  goto 16
	Declaration  goto 13
	FunctionDecl  goto 14
	MethodDecl  goto 15
	TopLevelDecl  goto 12
	TypeDecl  goto 17
	VarDecl  goto 18

state 10
	SourceFile1:  SourceFile1 ImportDecl.';' 

	';'  shift 23
	.  error


state 11
	ImportDecl:  IMPORT.ImportDecl1 
	ImportSpec1: .    (129)

	IDENTIFIER  shift 7
	'('  shift 26
	'.'  shift 29
	.  reduce 129 (src line 965)

	ImportDecl1  goto 24
	ImportSpec  goto 25
	ImportSpec1  goto 27
	ImportSpec11  goto 28
	PackageName  goto 30

state 12
	SourceFile2:  SourceFile2 TopLevelDecl.';' 

	';'  shift 31
	.  error


state 13
	TopLevelDecl:  Declaration.    (276)

	.  reduce 276 (src line 1709)


state 14
	TopLevelDecl:  FunctionDecl.    (277)

	.  reduce 277 (src line 1714)


state 15
	TopLevelDecl:  MethodDecl.    (278)

	.  reduce 278 (src line 1718)


state 16
	Declaration:  ConstDecl.    (54)

	.  reduce 54 (src line 565)


state 17
	Declaration:  TypeDecl.    (55)

	.  reduce 55 (src line 570)


state 18
	Declaration:  VarDecl.    (56)

	.  reduce 56 (src line 574)


state 19
	FunctionDecl:  FUNC.FunctionName Signature FunctionDecl1 
	MethodDecl:  FUNC.Receiver MethodName Signature MethodDecl1 

	IDENTIFIER  shift 34
	'('  shift 36
	.  error

	FunctionName  goto 32
	Parameters  goto 35
	Receiver  goto 33

state 20
	ConstDecl:  CONST.ConstDecl1 

	IDENTIFIER  shift 41
	'('  shift 39
	.  error

	ConstDecl1  goto 37
	ConstSpec  goto 38
	IdentifierList  goto 40

state 21
	TypeDecl:  TYPE.TypeDecl1 

	IDENTIFIER  shift 47
	'('  shift 44
	.  error

	AliasDecl  goto 45
	TypeDecl1  goto 42
	TypeDef  goto 46
	TypeSpec  goto 43

state 22
	VarDecl:  VAR.VarDecl1 

	IDENTIFIER  shift 41
	'('  shift 50
	.  error

	IdentifierList  goto 51
	VarDecl1  goto 48
	VarSpec  goto 49

state 23
	SourceFile1:  SourceFile1 ImportDecl ';'.    (248)

	.  reduce 248 (src line 1578)


state 24
	ImportDecl:  IMPORT ImportDecl1.    (122)

	.  reduce 122 (src line 927)


state 25
	ImportDecl1:  ImportSpec.    (123)

	.  reduce 123 (src line 933)


state 26
	ImportDecl1:  '('.ImportDecl11 ')' 
	ImportDecl11: .    (125)

	.  reduce 125 (src line 943)

	ImportDecl11  goto 52

state 27
	ImportSpec:  ImportSpec1.ImportPath 

	STRING_LIT  shift 54
	.  error

	ImportPath  goto 53

state 28
	ImportSpec1:  ImportSpec11.    (130)

	.  reduce 130 (src line 970)


state 29
	ImportSpec11:  '.'.    (131)

	.  reduce 131 (src line 975)


state 30
	ImportSpec11:  PackageName.    (132)

	.  reduce 132 (src line 980)


state 31
	SourceFile2:  SourceFile2 TopLevelDecl ';'.    (250)

	.  reduce 250 (src line 1588)


state 32
	FunctionDecl:  FUNC FunctionName.Signature FunctionDecl1 

	'('  shift 36
	.  error

	Parameters  goto 56
	Signature  goto 55

state 33
	MethodDecl:  FUNC Receiver.MethodName Signature MethodDecl1 

	IDENTIFIER  shift 58
	.  error

	MethodName  goto 57

state 34
	FunctionName:  IDENTIFIER.    (108)

	.  reduce 108 (src line 851)


state 35
	Receiver:  Parameters.    (209)

	.  reduce 209 (src line 1375)


36: shift/reduce conflict (shift 41(0), red'n 181(0)) on IDENTIFIER
state 36
	Parameters:  '('.Parameters1 ')' 
	Parameters1: .    (189)
	ParameterDecl1: .    (181)

	IDENTIFIER  shift 41
	')'  reduce 189 (src line 1277)
	.  reduce 181 (src line 1235)

	IdentifierList  goto 63
	ParameterDecl  goto 61
	ParameterDecl1  goto 62
	ParameterList  goto 60
	Parameters1  goto 59

state 37
	ConstDecl:  CONST ConstDecl1.    (38)

	.  reduce 38 (src line 481)


state 38
	ConstDecl1:  ConstSpec.    (39)

	.  reduce 39 (src line 487)


state 39
	ConstDecl1:  '('.ConstDecl11 ')' 
	ConstDecl11: .    (41)

	.  reduce 41 (src line 497)

	ConstDecl11  goto 64

state 40
	ConstSpec:  IdentifierList.ConstSpec1 
	ConstSpec1: .    (44)
	ConstSpec11: .    (46)

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	';'  reduce 44 (src line 513)
	'*'  shift 84
	.  reduce 46 (src line 523)

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ConstSpec1  goto 65
	ConstSpec11  goto 66
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 67
	TypeLit  goto 69
	TypeName  goto 68

state 41
	IdentifierList:  IDENTIFIER.IdentifierList1 
	IdentifierList1: .    (113)

	.  reduce 113 (src line 881)

	IdentifierList1  goto 91

state 42
	TypeDecl:  TYPE TypeDecl1.    (284)

	.  reduce 284 (src line 1749)


state 43
	TypeDecl1:  TypeSpec.    (285)

	.  reduce 285 (src line 1755)


state 44
	TypeDecl1:  '('.TypeDecl11 ')' 
	TypeDecl11: .    (287)

	.  reduce 287 (src line 1765)

	TypeDecl11  goto 92

state 45
	TypeSpec:  AliasDecl.    (303)

	.  reduce 303 (src line 1841)


state 46
	TypeSpec:  TypeDef.    (304)

	.  reduce 304 (src line 1846)


state 47
	AliasDecl:  IDENTIFIER.'=' Type 
	TypeDef:  IDENTIFIER.Type 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'='  shift 93
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 94
	TypeLit  goto 69
	TypeName  goto 68

state 48
	VarDecl:  VAR VarDecl1.    (317)

	.  reduce 317 (src line 1913)


state 49
	VarDecl1:  VarSpec.    (318)

	.  reduce 318 (src line 1919)


state 50
	VarDecl1:  '('.VarDecl11 ')' 
	VarDecl11: .    (320)

	.  reduce 320 (src line 1929)

	VarDecl11  goto 95

state 51
	VarSpec:  IdentifierList.VarSpec1 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'='  shift 98
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 97
	TypeLit  goto 69
	TypeName  goto 68
	VarSpec1  goto 96

state 52
	ImportDecl1:  '(' ImportDecl11.')' 
	ImportDecl11:  ImportDecl11.ImportSpec ';' 
	ImportSpec1: .    (129)

	IDENTIFIER  shift 7
	')'  shift 99
	'.'  shift 29
	.  reduce 129 (src line 965)

	ImportSpec  goto 100
	ImportSpec1  goto 27
	ImportSpec11  goto 28
	PackageName  goto 30

state 53
	ImportSpec:  ImportSpec1 ImportPath.    (128)

	.  reduce 128 (src line 959)


state 54
	ImportPath:  STRING_LIT.    (127)

	.  reduce 127 (src line 953)


state 55
	FunctionDecl:  FUNC FunctionName Signature.FunctionDecl1 
	FunctionDecl1: .    (105)

	'{'  shift 104
	.  reduce 105 (src line 835)

	Block  goto 103
	FunctionBody  goto 102
	FunctionDecl1  goto 101

56: shift/reduce conflict (shift 109(0), red'n 229(0)) on '('
state 56
	Signature:  Parameters.Signature1 
	Signature1: .    (229)

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 109
	'['  shift 82
	'*'  shift 84
	.  reduce 229 (src line 1485)

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	Parameters  goto 107
	PointerType  goto 75
	QualifiedIdent  goto 72
	Result  goto 106
	Signature1  goto 105
	SliceType  goto 78
	StructType  goto 74
	Type  goto 108
	TypeLit  goto 69
	TypeName  goto 68

state 57
	MethodDecl:  FUNC Receiver MethodName.Signature MethodDecl1 

	'('  shift 36
	.  error

	Parameters  goto 56
	Signature  goto 110

state 58
	MethodName:  IDENTIFIER.    (170)

	.  reduce 170 (src line 1177)


state 59
	Parameters:  '(' Parameters1.')' 

	')'  shift 111
	.  error


state 60
	Parameters1:  ParameterList.Parameters11 
	Parameters11: .    (191)

	','  shift 113
	.  reduce 191 (src line 1287)

	Parameters11  goto 112

state 61
	ParameterList:  ParameterDecl.ParameterList1 
	ParameterList1: .    (186)

	.  reduce 186 (src line 1261)

	ParameterList1  goto 114

state 62
	ParameterDecl:  ParameterDecl1.ParameterDecl2 Type 
	ParameterDecl2: .    (183)

	TOK2  shift 116
	.  reduce 183 (src line 1245)

	ParameterDecl2  goto 115

state 63
	ParameterDecl1:  IdentifierList.    (182)

	.  reduce 182 (src line 1240)


state 64
	ConstDecl1:  '(' ConstDecl11.')' 
	ConstDecl11:  ConstDecl11.ConstSpec ';' 

	IDENTIFIER  shift 41
	')'  shift 117
	.  error

	ConstSpec  goto 118
	IdentifierList  goto 40

state 65
	ConstSpec:  IdentifierList ConstSpec1.    (43)

	.  reduce 43 (src line 507)


state 66
	ConstSpec1:  ConstSpec11.'=' ExpressionList 

	'='  shift 119
	.  error


state 67
	ConstSpec11:  Type.    (47)

	.  reduce 47 (src line 528)


state 68
	Type:  TypeName.    (279)

	.  reduce 279 (src line 1723)


state 69
	Type:  TypeLit.    (280)

	.  reduce 280 (src line 1728)


state 70
	Type:  '('.Type ')' 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 120
	TypeLit  goto 69
	TypeName  goto 68

 71: reduce/reduce conflict  (red'ns 179 and 301) on '.'
state 71
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)

	'.'  reduce 179 (src line 1223)
	.  reduce 301 (src line 1831)


state 72
	TypeName:  QualifiedIdent.    (302)

	.  reduce 302 (src line 1836)


state 73
	TypeLit:  ArrayType.    (293)

	.  reduce 293 (src line 1797)


state 74
	TypeLit:  StructType.    (294)

	.  reduce 294 (src line 1802)


state 75
	TypeLit:  PointerType.    (295)

	.  reduce 295 (src line 1806)


state 76
	TypeLit:  FunctionType.    (296)

	.  reduce 296 (src line 1810)


state 77
	TypeLit:  InterfaceType.    (297)

	.  reduce 297 (src line 1814)


state 78
	TypeLit:  SliceType.    (298)

	.  reduce 298 (src line 1818)


state 79
	TypeLit:  MapType.    (299)

	.  reduce 299 (src line 1822)


state 80
	TypeLit:  ChannelType.    (300)

	.  reduce 300 (src line 1826)


state 81
	QualifiedIdent:  PackageName.'.' IDENTIFIER 

	'.'  shift 121
	.  error


state 82
	ArrayType:  '['.ArrayLength ']' ElementType 
	SliceType:  '['.']' ElementType 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	']'  shift 123
	'*'  shift 84
	.  error

	ArrayLength  goto 122
	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 124
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 83
	StructType:  STRUCT.'{' StructType1 '}' 

	'{'  shift 154
	.  error


state 84
	PointerType:  '*'.BaseType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	BaseType  goto 155
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 156
	TypeLit  goto 69
	TypeName  goto 68

state 85
	FunctionType:  FUNC.Signature 

	'('  shift 36
	.  error

	Parameters  goto 56
	Signature  goto 157

state 86
	InterfaceType:  INTERFACE.'{' InterfaceType1 '}' 

	'{'  shift 158
	.  error


state 87
	MapType:  MAP.'[' KeyType ']' ElementType 

	'['  shift 159
	.  error


state 88
	ChannelType:  ChannelType1.ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ElementType  goto 160
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 161
	TypeLit  goto 69
	TypeName  goto 68

89: shift/reduce conflict (shift 162(0), red'n 28(0)) on TOK5
state 89
	ChannelType1:  CHAN.    (28)
	ChannelType1:  CHAN.TOK5 

	TOK5  shift 162
	.  reduce 28 (src line 429)


state 90
	ChannelType1:  TOK5.CHAN 

	CHAN  shift 163
	.  error


state 91
	IdentifierList:  IDENTIFIER IdentifierList1.    (112)
	IdentifierList1:  IdentifierList1.',' IDENTIFIER 

	','  shift 164
	.  reduce 112 (src line 875)


state 92
	TypeDecl1:  '(' TypeDecl11.')' 
	TypeDecl11:  TypeDecl11.TypeSpec ';' 

	IDENTIFIER  shift 47
	')'  shift 165
	.  error

	AliasDecl  goto 45
	TypeDef  goto 46
	TypeSpec  goto 166

state 93
	AliasDecl:  IDENTIFIER '='.Type 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 167
	TypeLit  goto 69
	TypeName  goto 68

state 94
	TypeDef:  IDENTIFIER Type.    (289)

	.  reduce 289 (src line 1775)


state 95
	VarDecl1:  '(' VarDecl11.')' 
	VarDecl11:  VarDecl11.VarSpec ';' 

	IDENTIFIER  shift 41
	')'  shift 168
	.  error

	IdentifierList  goto 51
	VarSpec  goto 169

state 96
	VarSpec:  IdentifierList VarSpec1.    (322)

	.  reduce 322 (src line 1939)


state 97
	VarSpec1:  Type.VarSpec11 
	VarSpec11: .    (325)

	'='  shift 171
	.  reduce 325 (src line 1955)

	VarSpec11  goto 170

state 98
	VarSpec1:  '='.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 172
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 99
	ImportDecl1:  '(' ImportDecl11 ')'.    (124)

	.  reduce 124 (src line 938)


state 100
	ImportDecl11:  ImportDecl11 ImportSpec.';' 

	';'  shift 174
	.  error


state 101
	FunctionDecl:  FUNC FunctionName Signature FunctionDecl1.    (104)

	.  reduce 104 (src line 829)


state 102
	FunctionDecl1:  FunctionBody.    (106)

	.  reduce 106 (src line 840)


state 103
	FunctionBody:  Block.    (103)

	.  reduce 103 (src line 823)


state 104
	Block:  '{'.StatementList '}' 
	StatementList1: .    (268)

	.  reduce 268 (src line 1667)

	StatementList  goto 175
	StatementList1  goto 176

state 105
	Signature:  Parameters Signature1.    (228)

	.  reduce 228 (src line 1479)


state 106
	Signature1:  Result.    (230)

	.  reduce 230 (src line 1490)


state 107
	Result:  Parameters.    (217)

	.  reduce 217 (src line 1419)


state 108
	Result:  Type.    (218)

	.  reduce 218 (src line 1424)


109: shift/reduce conflict (shift 177(0), red'n 181(0)) on IDENTIFIER
109: shift/reduce conflict (shift 90(0), red'n 181(0)) on TOK5
109: shift/reduce conflict (shift 89(0), red'n 181(0)) on CHAN
109: shift/reduce conflict (shift 85(0), red'n 181(0)) on FUNC
109: shift/reduce conflict (shift 86(0), red'n 181(0)) on INTERFACE
109: shift/reduce conflict (shift 87(0), red'n 181(0)) on MAP
109: shift/reduce conflict (shift 83(0), red'n 181(0)) on STRUCT
109: shift/reduce conflict (shift 70(0), red'n 181(0)) on '('
109: shift/reduce conflict (shift 82(0), red'n 181(0)) on '['
109: shift/reduce conflict (shift 84(0), red'n 181(0)) on '*'
state 109
	Parameters:  '('.Parameters1 ')' 
	Type:  '('.Type ')' 
	Parameters1: .    (189)
	ParameterDecl1: .    (181)

	IDENTIFIER  shift 177
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	')'  reduce 189 (src line 1277)
	'['  shift 82
	'*'  shift 84
	.  reduce 181 (src line 1235)

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	IdentifierList  goto 63
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	ParameterDecl  goto 61
	ParameterDecl1  goto 62
	ParameterList  goto 60
	Parameters1  goto 59
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 120
	TypeLit  goto 69
	TypeName  goto 68

state 110
	MethodDecl:  FUNC Receiver MethodName Signature.MethodDecl1 
	MethodDecl1: .    (167)

	'{'  shift 104
	.  reduce 167 (src line 1161)

	Block  goto 103
	FunctionBody  goto 179
	MethodDecl1  goto 178

state 111
	Parameters:  '(' Parameters1 ')'.    (188)

	.  reduce 188 (src line 1271)


state 112
	Parameters1:  ParameterList Parameters11.    (190)

	.  reduce 190 (src line 1282)


state 113
	Parameters11:  ','.    (192)

	.  reduce 192 (src line 1292)


114: shift/reduce conflict (shift 180(0), red'n 185(0)) on ','
state 114
	ParameterList:  ParameterDecl ParameterList1.    (185)
	ParameterList1:  ParameterList1.',' ParameterDecl 

	','  shift 180
	.  reduce 185 (src line 1255)


state 115
	ParameterDecl:  ParameterDecl1 ParameterDecl2.Type 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 181
	TypeLit  goto 69
	TypeName  goto 68

state 116
	ParameterDecl2:  TOK2.    (184)

	.  reduce 184 (src line 1250)


state 117
	ConstDecl1:  '(' ConstDecl11 ')'.    (40)

	.  reduce 40 (src line 492)


state 118
	ConstDecl11:  ConstDecl11 ConstSpec.';' 

	';'  shift 182
	.  error


state 119
	ConstSpec1:  ConstSpec11 '='.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 183
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 120
	Type:  '(' Type.')' 

	')'  shift 184
	.  error


state 121
	QualifiedIdent:  PackageName '.'.IDENTIFIER 

	IDENTIFIER  shift 185
	.  error


state 122
	ArrayType:  '[' ArrayLength.']' ElementType 

	']'  shift 186
	.  error


state 123
	SliceType:  '[' ']'.ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ElementType  goto 187
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 161
	TypeLit  goto 69
	TypeName  goto 68

state 124
	ArrayLength:  Expression.    (13)
	Expression:  Expression.BINARY_OP Expression 

	BINARY_OP  shift 188
	.  reduce 13 (src line 349)


state 125
	Expression:  UnaryExpr.    (77)

	.  reduce 77 (src line 687)


state 126
	PrimaryExpr:  PrimaryExpr.Selector 
	PrimaryExpr:  PrimaryExpr.Index 
	PrimaryExpr:  PrimaryExpr.Slice 
	PrimaryExpr:  PrimaryExpr.TypeAssertion 
	PrimaryExpr:  PrimaryExpr.Arguments 
	UnaryExpr:  PrimaryExpr.    (315)

	'('  shift 196
	'['  shift 195
	'.'  shift 194
	.  reduce 315 (src line 1903)

	Arguments  goto 193
	Index  goto 190
	Selector  goto 189
	Slice  goto 191
	TypeAssertion  goto 192

state 127
	UnaryExpr:  UNARY_OP.UnaryExpr 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 197

state 128
	PrimaryExpr:  Operand.    (195)

	.  reduce 195 (src line 1309)


state 129
	PrimaryExpr:  Conversion.    (196)

	.  reduce 196 (src line 1314)


state 130
	PrimaryExpr:  MethodExpr.    (197)

	.  reduce 197 (src line 1318)


state 131
	Operand:  Literal.    (173)

	.  reduce 173 (src line 1193)


state 132
	Operand:  OperandName.    (174)

	.  reduce 174 (src line 1198)


state 133
	Operand:  '('.Expression ')' 
	Type:  '('.Type ')' 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 198
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 199
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 134
	Conversion:  Type.'(' Expression Conversion1 ')' 
	ReceiverType:  Type.    (210)

	'('  shift 200
	.  reduce 210 (src line 1381)


state 135
	MethodExpr:  ReceiverType.'.' MethodName 

	'.'  shift 201
	.  error


state 136
	Literal:  BasicLit.    (151)

	.  reduce 151 (src line 1083)


state 137
	Literal:  CompositeLit.    (152)

	.  reduce 152 (src line 1088)


state 138
	Literal:  FunctionLit.    (153)

	.  reduce 153 (src line 1092)


 139: reduce/reduce conflict  (red'ns 176 and 179) on '.'
 139: reduce/reduce conflict  (red'ns 176 and 301) on TOK2
 139: reduce/reduce conflict  (red'ns 176 and 301) on '('
 139: reduce/reduce conflict  (red'ns 176 and 301) on ')'
 139: reduce/reduce conflict  (red'ns 176 and 301) on ','
 139: reduce/reduce conflict  (red'ns 176 and 301) on '{'
 139: reduce/reduce conflict  (red'ns 176 and 301) on '.'
state 139
	OperandName:  IDENTIFIER.    (176)
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)

	.  reduce 176 (src line 1207)


 140: reduce/reduce conflict  (red'ns 177 and 302) on TOK2
 140: reduce/reduce conflict  (red'ns 177 and 302) on '('
 140: reduce/reduce conflict  (red'ns 177 and 302) on ')'
 140: reduce/reduce conflict  (red'ns 177 and 302) on ','
 140: reduce/reduce conflict  (red'ns 177 and 302) on '{'
 140: reduce/reduce conflict  (red'ns 177 and 302) on '.'
state 140
	OperandName:  QualifiedIdent.    (177)
	TypeName:  QualifiedIdent.    (302)

	.  reduce 177 (src line 1212)


state 141
	LiteralType:  TypeName.    (159)
	Type:  TypeName.    (279)

	'{'  reduce 159 (src line 1118)
	.  reduce 279 (src line 1723)


state 142
	BasicLit:  INT_LIT.    (17)

	.  reduce 17 (src line 373)


state 143
	BasicLit:  FLOAT_LIT.    (18)

	.  reduce 18 (src line 378)


state 144
	BasicLit:  IMAGINARY_LIT.    (19)

	.  reduce 19 (src line 382)


state 145
	BasicLit:  RUNE_LIT.    (20)

	.  reduce 20 (src line 386)


state 146
	BasicLit:  STRING_LIT.    (21)

	.  reduce 21 (src line 390)


state 147
	CompositeLit:  LiteralType.LiteralValue 

	'{'  shift 203
	.  error

	LiteralValue  goto 202

state 148
	FunctionLit:  FUNC.Signature FunctionBody 
	FunctionType:  FUNC.Signature 

	'('  shift 36
	.  error

	Parameters  goto 56
	Signature  goto 204

state 149
	LiteralType:  ArrayType.    (155)
	TypeLit:  ArrayType.    (293)

	'{'  reduce 155 (src line 1102)
	.  reduce 293 (src line 1797)


state 150
	LiteralType:  StructType.    (154)
	TypeLit:  StructType.    (294)

	'{'  reduce 154 (src line 1097)
	.  reduce 294 (src line 1802)


state 151
	LiteralType:  SliceType.    (157)
	TypeLit:  SliceType.    (298)

	'{'  reduce 157 (src line 1110)
	.  reduce 298 (src line 1818)


state 152
	LiteralType:  MapType.    (158)
	TypeLit:  MapType.    (299)

	'{'  reduce 158 (src line 1114)
	.  reduce 299 (src line 1822)


state 153
	ArrayType:  '['.ArrayLength ']' ElementType 
	LiteralType:  '['.TOK2 ']' ElementType 
	SliceType:  '['.']' ElementType 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK2  shift 205
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	']'  shift 123
	'*'  shift 84
	.  error

	ArrayLength  goto 122
	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 124
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 154
	StructType:  STRUCT '{'.StructType1 '}' 
	StructType1: .    (271)

	.  reduce 271 (src line 1683)

	StructType1  goto 206

state 155
	PointerType:  '*' BaseType.    (193)

	.  reduce 193 (src line 1297)


state 156
	BaseType:  Type.    (16)

	.  reduce 16 (src line 367)


state 157
	FunctionType:  FUNC Signature.    (109)

	.  reduce 109 (src line 857)


state 158
	InterfaceType:  INTERFACE '{'.InterfaceType1 '}' 
	InterfaceType1: .    (139)

	.  reduce 139 (src line 1019)

	InterfaceType1  goto 207

state 159
	MapType:  MAP '['.KeyType ']' ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	KeyType  goto 208
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 209
	TypeLit  goto 69
	TypeName  goto 68

state 160
	ChannelType:  ChannelType1 ElementType.    (27)

	.  reduce 27 (src line 423)


state 161
	ElementType:  Type.    (63)

	.  reduce 63 (src line 611)


state 162
	ChannelType1:  CHAN TOK5.    (29)

	.  reduce 29 (src line 434)


state 163
	ChannelType1:  TOK5 CHAN.    (30)

	.  reduce 30 (src line 438)


state 164
	IdentifierList1:  IdentifierList1 ','.IDENTIFIER 

	IDENTIFIER  shift 210
	.  error


state 165
	TypeDecl1:  '(' TypeDecl11 ')'.    (286)

	.  reduce 286 (src line 1760)


state 166
	TypeDecl11:  TypeDecl11 TypeSpec.';' 

	';'  shift 211
	.  error


state 167
	AliasDecl:  IDENTIFIER '=' Type.    (1)

	.  reduce 1 (src line 287)


state 168
	VarDecl1:  '(' VarDecl11 ')'.    (319)

	.  reduce 319 (src line 1924)


state 169
	VarDecl11:  VarDecl11 VarSpec.';' 

	';'  shift 212
	.  error


state 170
	VarSpec1:  Type VarSpec11.    (323)

	.  reduce 323 (src line 1945)


state 171
	VarSpec11:  '='.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 213
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 172
	VarSpec1:  '=' ExpressionList.    (324)

	.  reduce 324 (src line 1950)


state 173
	Expression:  Expression.BINARY_OP Expression 
	ExpressionList:  Expression.ExpressionList1 
	ExpressionList1: .    (80)

	BINARY_OP  shift 188
	.  reduce 80 (src line 703)

	ExpressionList1  goto 214

state 174
	ImportDecl11:  ImportDecl11 ImportSpec ';'.    (126)

	.  reduce 126 (src line 948)


state 175
	Block:  '{' StatementList.'}' 

	'}'  shift 215
	.  error


state 176
	StatementList:  StatementList1.    (267)
	StatementList1:  StatementList1.Statement ';' 
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 251
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	BREAK  shift 241
	CHAN  shift 89
	CONST  shift 20
	CONTINUE  shift 242
	DEFER  shift 250
	FALLTHROUGH  shift 244
	FOR  shift 249
	FUNC  shift 148
	GO  shift 239
	GOTO  shift 243
	IF  shift 245
	INTERFACE  shift 86
	MAP  shift 87
	RETURN  shift 240
	SELECT  shift 248
	STRUCT  shift 83
	SWITCH  shift 256
	TYPE  shift 21
	VAR  shift 22
	'('  shift 133
	'['  shift 153
	'{'  shift 104
	';'  reduce 66 (src line 629)
	'*'  shift 84
	.  reduce 267 (src line 1661)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Block  goto 226
	BreakStmt  goto 222
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	ConstDecl  goto 16
	ContinueStmt  goto 223
	Conversion  goto 129
	Declaration  goto 217
	DeferStmt  goto 231
	EmptyStmt  goto 233
	ExprSwitchStmt  goto 246
	Expression  goto 252
	ExpressionList  goto 254
	ExpressionStmt  goto 234
	FallthroughStmt  goto 225
	ForStmt  goto 230
	FunctionLit  goto 138
	FunctionType  goto 76
	GoStmt  goto 220
	GotoStmt  goto 224
	IdentifierList  goto 255
	IfStmt  goto 227
	IncDecStmt  goto 236
	InterfaceType  goto 77
	Label  goto 232
	LabeledStmt  goto 218
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	ReturnStmt  goto 221
	SelectStmt  goto 229
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 219
	SliceType  goto 151
	Statement  goto 216
	StructType  goto 150
	SwitchStmt  goto 228
	Type  goto 134
	TypeDecl  goto 17
	TypeLit  goto 69
	TypeName  goto 141
	TypeSwitchStmt  goto 247
	UnaryExpr  goto 125
	VarDecl  goto 18

state 177
	IdentifierList:  IDENTIFIER.IdentifierList1 
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)
	IdentifierList1: .    (113)

	')'  reduce 301 (src line 1831)
	'.'  reduce 179 (src line 1223)
	.  reduce 113 (src line 881)

	IdentifierList1  goto 91

state 178
	MethodDecl:  FUNC Receiver MethodName Signature MethodDecl1.    (166)

	.  reduce 166 (src line 1155)


state 179
	MethodDecl1:  FunctionBody.    (168)

	.  reduce 168 (src line 1166)


180: shift/reduce conflict (shift 41(0), red'n 181(0)) on IDENTIFIER
state 180
	ParameterList1:  ParameterList1 ','.ParameterDecl 
	ParameterDecl1: .    (181)

	IDENTIFIER  shift 41
	.  reduce 181 (src line 1235)

	IdentifierList  goto 63
	ParameterDecl  goto 257
	ParameterDecl1  goto 62

state 181
	ParameterDecl:  ParameterDecl1 ParameterDecl2 Type.    (180)

	.  reduce 180 (src line 1229)


state 182
	ConstDecl11:  ConstDecl11 ConstSpec ';'.    (42)

	.  reduce 42 (src line 502)


state 183
	ConstSpec1:  ConstSpec11 '=' ExpressionList.    (45)

	.  reduce 45 (src line 518)


state 184
	Type:  '(' Type ')'.    (281)

	.  reduce 281 (src line 1732)


state 185
	QualifiedIdent:  PackageName '.' IDENTIFIER.    (203)

	.  reduce 203 (src line 1343)


state 186
	ArrayType:  '[' ArrayLength ']'.ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ElementType  goto 258
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 161
	TypeLit  goto 69
	TypeName  goto 68

state 187
	SliceType:  '[' ']' ElementType.    (245)

	.  reduce 245 (src line 1561)


state 188
	Expression:  Expression BINARY_OP.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 259
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 189
	PrimaryExpr:  PrimaryExpr Selector.    (198)

	.  reduce 198 (src line 1322)


state 190
	PrimaryExpr:  PrimaryExpr Index.    (199)

	.  reduce 199 (src line 1326)


state 191
	PrimaryExpr:  PrimaryExpr Slice.    (200)

	.  reduce 200 (src line 1330)


state 192
	PrimaryExpr:  PrimaryExpr TypeAssertion.    (201)

	.  reduce 201 (src line 1334)


state 193
	PrimaryExpr:  PrimaryExpr Arguments.    (202)

	.  reduce 202 (src line 1338)


state 194
	Selector:  '.'.IDENTIFIER 
	TypeAssertion:  '.'.'(' Type ')' 

	IDENTIFIER  shift 260
	'('  shift 261
	.  error


 195: reduce/reduce conflict  (red'ns 239 and 243) on ':'
state 195
	Index:  '['.Expression ']' 
	Slice:  '['.Slice1 ':' Slice2 ']' 
	Slice:  '['.Slice3 ':' Expression ':' Expression ']' 
	Slice1: .    (239)
	Slice3: .    (243)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 239 (src line 1531)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 262
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	Slice1  goto 263
	Slice3  goto 264
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 196
	Arguments:  '('.Arguments1 ')' 
	Arguments1: .    (3)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 3 (src line 299)

	Arguments1  goto 265
	Arguments11  goto 266
	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 267
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 268
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 197
	UnaryExpr:  UNARY_OP UnaryExpr.    (316)

	.  reduce 316 (src line 1908)


state 198
	Expression:  Expression.BINARY_OP Expression 
	Operand:  '(' Expression.')' 

	BINARY_OP  shift 188
	')'  shift 269
	.  error


state 199
	Conversion:  Type.'(' Expression Conversion1 ')' 
	ReceiverType:  Type.    (210)
	Type:  '(' Type.')' 

	'('  shift 200
	')'  shift 184
	.  reduce 210 (src line 1381)


state 200
	Conversion:  Type '('.Expression Conversion1 ')' 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 270
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 201
	MethodExpr:  ReceiverType '.'.MethodName 

	IDENTIFIER  shift 58
	.  error

	MethodName  goto 271

state 202
	CompositeLit:  LiteralType LiteralValue.    (36)

	.  reduce 36 (src line 469)


203: shift/reduce conflict (shift 143(0), red'n 147(0)) on FLOAT_LIT
203: shift/reduce conflict (shift 280(0), red'n 147(0)) on IDENTIFIER
203: shift/reduce conflict (shift 144(0), red'n 147(0)) on IMAGINARY_LIT
203: shift/reduce conflict (shift 142(0), red'n 147(0)) on INT_LIT
203: shift/reduce conflict (shift 145(0), red'n 147(0)) on RUNE_LIT
203: shift/reduce conflict (shift 146(0), red'n 147(0)) on STRING_LIT
203: shift/reduce conflict (shift 127(0), red'n 147(0)) on UNARY_OP
203: shift/reduce conflict (shift 90(0), red'n 147(0)) on TOK5
203: shift/reduce conflict (shift 89(0), red'n 147(0)) on CHAN
203: shift/reduce conflict (shift 148(0), red'n 147(0)) on FUNC
203: shift/reduce conflict (shift 86(0), red'n 147(0)) on INTERFACE
203: shift/reduce conflict (shift 87(0), red'n 147(0)) on MAP
203: shift/reduce conflict (shift 83(0), red'n 147(0)) on STRUCT
203: shift/reduce conflict (shift 133(0), red'n 147(0)) on '('
203: shift/reduce conflict (shift 153(0), red'n 147(0)) on '['
203: shift/reduce conflict (shift 203(0), red'n 147(0)) on '{'
203: shift/reduce conflict (shift 84(0), red'n 147(0)) on '*'
state 203
	LiteralValue:  '{'.LiteralValue1 '}' 
	LiteralValue1: .    (161)
	KeyedElement1: .    (147)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 280
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'{'  shift 203
	'*'  shift 84
	.  reduce 161 (src line 1129)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	ElementList  goto 273
	Expression  goto 278
	FieldName  goto 277
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Key  goto 276
	KeyedElement  goto 274
	KeyedElement1  goto 275
	Literal  goto 131
	LiteralType  goto 147
	LiteralValue  goto 279
	LiteralValue1  goto 272
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 204
	FunctionLit:  FUNC Signature.FunctionBody 
	FunctionType:  FUNC Signature.    (109)

	'{'  shift 104
	.  reduce 109 (src line 857)

	Block  goto 103
	FunctionBody  goto 281

state 205
	LiteralType:  '[' TOK2.']' ElementType 

	']'  shift 282
	.  error


state 206
	StructType:  STRUCT '{' StructType1.'}' 
	StructType1:  StructType1.FieldDecl ';' 

	IDENTIFIER  shift 41
	'}'  shift 283
	'*'  shift 289
	.  error

	EmbeddedField  goto 287
	EmbeddedField1  goto 288
	FieldDecl  goto 284
	FieldDecl1  goto 285
	IdentifierList  goto 286

state 207
	InterfaceType:  INTERFACE '{' InterfaceType1.'}' 
	InterfaceType1:  InterfaceType1.MethodSpec ';' 

	IDENTIFIER  shift 294
	'}'  shift 290
	.  error

	InterfaceTypeName  goto 293
	MethodName  goto 292
	MethodSpec  goto 291
	PackageName  goto 81
	QualifiedIdent  goto 72
	TypeName  goto 295

state 208
	MapType:  MAP '[' KeyType.']' ElementType 

	']'  shift 296
	.  error


state 209
	KeyType:  Type.    (145)

	.  reduce 145 (src line 1049)


state 210
	IdentifierList1:  IdentifierList1 ',' IDENTIFIER.    (114)

	.  reduce 114 (src line 886)


state 211
	TypeDecl11:  TypeDecl11 TypeSpec ';'.    (288)

	.  reduce 288 (src line 1770)


state 212
	VarDecl11:  VarDecl11 VarSpec ';'.    (321)

	.  reduce 321 (src line 1934)


state 213
	VarSpec11:  '=' ExpressionList.    (326)

	.  reduce 326 (src line 1960)


214: shift/reduce conflict (shift 297(0), red'n 79(0)) on ','
state 214
	ExpressionList:  Expression ExpressionList1.    (79)
	ExpressionList1:  ExpressionList1.',' Expression 

	','  shift 297
	.  reduce 79 (src line 697)


state 215
	Block:  '{' StatementList '}'.    (22)

	.  reduce 22 (src line 395)


state 216
	StatementList1:  StatementList1 Statement.';' 

	';'  shift 298
	.  error


state 217
	Statement:  Declaration.    (252)

	.  reduce 252 (src line 1599)


state 218
	Statement:  LabeledStmt.    (253)

	.  reduce 253 (src line 1604)


state 219
	Statement:  SimpleStmt.    (254)

	.  reduce 254 (src line 1608)


state 220
	Statement:  GoStmt.    (255)

	.  reduce 255 (src line 1612)


state 221
	Statement:  ReturnStmt.    (256)

	.  reduce 256 (src line 1616)


state 222
	Statement:  BreakStmt.    (257)

	.  reduce 257 (src line 1620)


state 223
	Statement:  ContinueStmt.    (258)

	.  reduce 258 (src line 1624)


state 224
	Statement:  GotoStmt.    (259)

	.  reduce 259 (src line 1628)


state 225
	Statement:  FallthroughStmt.    (260)

	.  reduce 260 (src line 1632)


state 226
	Statement:  Block.    (261)

	.  reduce 261 (src line 1636)


state 227
	Statement:  IfStmt.    (262)

	.  reduce 262 (src line 1640)


state 228
	Statement:  SwitchStmt.    (263)

	.  reduce 263 (src line 1644)


state 229
	Statement:  SelectStmt.    (264)

	.  reduce 264 (src line 1648)


state 230
	Statement:  ForStmt.    (265)

	.  reduce 265 (src line 1652)


state 231
	Statement:  DeferStmt.    (266)

	.  reduce 266 (src line 1656)


state 232
	LabeledStmt:  Label.':' Statement 

	':'  shift 299
	.  error


state 233
	SimpleStmt:  EmptyStmt.    (231)

	.  reduce 231 (src line 1495)


state 234
	SimpleStmt:  ExpressionStmt.    (232)

	.  reduce 232 (src line 1500)


state 235
	SimpleStmt:  SendStmt.    (233)

	.  reduce 233 (src line 1504)


state 236
	SimpleStmt:  IncDecStmt.    (234)

	.  reduce 234 (src line 1508)


state 237
	SimpleStmt:  Assignment.    (235)

	.  reduce 235 (src line 1512)


state 238
	SimpleStmt:  ShortVarDecl.    (236)

	.  reduce 236 (src line 1516)


state 239
	GoStmt:  GO.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 300
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 240
	ReturnStmt:  RETURN.ReturnStmt1 
	ReturnStmt1: .    (220)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 220 (src line 1435)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 302
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	ReturnStmt1  goto 301
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 241
	BreakStmt:  BREAK.BreakStmt1 
	BreakStmt1: .    (24)

	IDENTIFIER  shift 305
	.  reduce 24 (src line 407)

	BreakStmt1  goto 303
	Label  goto 304

state 242
	ContinueStmt:  CONTINUE.ContinueStmt1 
	ContinueStmt1: .    (49)

	IDENTIFIER  shift 305
	.  reduce 49 (src line 539)

	ContinueStmt1  goto 306
	Label  goto 307

state 243
	GotoStmt:  GOTO.Label 

	IDENTIFIER  shift 305
	.  error

	Label  goto 308

state 244
	FallthroughStmt:  FALLTHROUGH.    (83)

	.  reduce 83 (src line 719)


245: shift/reduce conflict (shift 143(0), red'n 116(0)) on FLOAT_LIT
245: shift/reduce conflict (shift 311(0), red'n 116(0)) on IDENTIFIER
245: shift/reduce conflict (shift 144(0), red'n 116(0)) on IMAGINARY_LIT
245: shift/reduce conflict (shift 142(0), red'n 116(0)) on INT_LIT
245: shift/reduce conflict (shift 145(0), red'n 116(0)) on RUNE_LIT
245: shift/reduce conflict (shift 146(0), red'n 116(0)) on STRING_LIT
245: shift/reduce conflict (shift 127(0), red'n 116(0)) on UNARY_OP
245: shift/reduce conflict (shift 90(0), red'n 116(0)) on TOK5
245: shift/reduce conflict (shift 89(0), red'n 116(0)) on CHAN
245: shift/reduce conflict (shift 148(0), red'n 116(0)) on FUNC
245: shift/reduce conflict (shift 86(0), red'n 116(0)) on INTERFACE
245: shift/reduce conflict (shift 87(0), red'n 116(0)) on MAP
245: shift/reduce conflict (shift 83(0), red'n 116(0)) on STRUCT
245: shift/reduce conflict (shift 133(0), red'n 116(0)) on '('
245: shift/reduce conflict (shift 153(0), red'n 116(0)) on '['
245: shift/reduce conflict (shift 84(0), red'n 116(0)) on '*'
state 245
	IfStmt:  IF.IfStmt1 Expression Block IfStmt2 
	IfStmt1: .    (116)
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 311
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 66 (src line 629)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	EmptyStmt  goto 233
	Expression  goto 252
	ExpressionList  goto 254
	ExpressionStmt  goto 234
	FunctionLit  goto 138
	FunctionType  goto 76
	IdentifierList  goto 255
	IfStmt1  goto 309
	IncDecStmt  goto 236
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 310
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 246
	SwitchStmt:  ExprSwitchStmt.    (273)

	.  reduce 273 (src line 1693)


state 247
	SwitchStmt:  TypeSwitchStmt.    (274)

	.  reduce 274 (src line 1698)


state 248
	SelectStmt:  SELECT.'{' SelectStmt1 '}' 

	'{'  shift 312
	.  error


 249: reduce/reduce conflict  (red'ns 91 and 66) on ';'
state 249
	ForStmt:  FOR.ForStmt1 Block 
	ForStmt1: .    (98)
	ForClause1: .    (91)
	RangeClause1: .    (205)
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 311
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'{'  reduce 98 (src line 799)
	';'  reduce 66 (src line 629)
	'*'  shift 84
	.  reduce 205 (src line 1355)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Condition  goto 315
	Conversion  goto 129
	EmptyStmt  goto 233
	Expression  goto 318
	ExpressionList  goto 324
	ExpressionStmt  goto 234
	ForClause  goto 316
	ForClause1  goto 319
	ForStmt1  goto 313
	ForStmt11  goto 314
	FunctionLit  goto 138
	FunctionType  goto 76
	IdentifierList  goto 325
	IncDecStmt  goto 236
	InitStmt  goto 321
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	RangeClause  goto 317
	RangeClause1  goto 320
	RangeClause11  goto 322
	ReceiverType  goto 135
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 323
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 250
	DeferStmt:  DEFER.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 326
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

 251: reduce/reduce conflict  (red'ns 176 and 179) on '.'
 251: reduce/reduce conflict  (red'ns 176 and 301) on '('
 251: reduce/reduce conflict  (red'ns 176 and 301) on '.'
 251: reduce/reduce conflict  (red'ns 176 and 113) on ','
state 251
	IdentifierList:  IDENTIFIER.IdentifierList1 
	Label:  IDENTIFIER.    (149)
	OperandName:  IDENTIFIER.    (176)
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)
	IdentifierList1: .    (113)

	TOK4  reduce 113 (src line 881)
	','  reduce 113 (src line 881)
	'{'  reduce 301 (src line 1831)
	':'  reduce 149 (src line 1071)
	.  reduce 176 (src line 1207)

	IdentifierList1  goto 91

state 252
	Channel:  Expression.    (26)
	Expression:  Expression.BINARY_OP Expression 
	ExpressionList:  Expression.ExpressionList1 
	ExpressionStmt:  Expression.    (82)
	IncDecStmt:  Expression.IncDecStmt1 
	ExpressionList1: .    (80)

	BINARY_OP  shift 188
	TOK1  shift 328
	TOK3  shift 329
	TOK5  reduce 26 (src line 417)
	'{'  reduce 82 (src line 713)
	';'  reduce 82 (src line 713)
	.  reduce 80 (src line 703)

	ExpressionList1  goto 214
	IncDecStmt1  goto 327

state 253
	SendStmt:  Channel.TOK5 Expression 

	TOK5  shift 330
	.  error


state 254
	Assignment:  ExpressionList.ASSIGN_OP ExpressionList 

	ASSIGN_OP  shift 331
	.  error


state 255
	ShortVarDecl:  IdentifierList.TOK4 ExpressionList 

	TOK4  shift 332
	.  error


256: shift/reduce conflict (shift 143(0), red'n 71(0)) on FLOAT_LIT
256: shift/reduce conflict (shift 311(0), red'n 71(0)) on IDENTIFIER
256: shift/reduce conflict (shift 144(0), red'n 71(0)) on IMAGINARY_LIT
256: shift/reduce conflict (shift 142(0), red'n 71(0)) on INT_LIT
256: shift/reduce conflict (shift 145(0), red'n 71(0)) on RUNE_LIT
256: shift/reduce conflict (shift 146(0), red'n 71(0)) on STRING_LIT
256: shift/reduce conflict (shift 127(0), red'n 71(0)) on UNARY_OP
256: shift/reduce conflict (shift 90(0), red'n 71(0)) on TOK5
256: shift/reduce conflict (shift 89(0), red'n 71(0)) on CHAN
256: shift/reduce conflict (shift 148(0), red'n 71(0)) on FUNC
256: shift/reduce conflict (shift 86(0), red'n 71(0)) on INTERFACE
256: shift/reduce conflict (shift 87(0), red'n 71(0)) on MAP
256: shift/reduce conflict (shift 83(0), red'n 71(0)) on STRUCT
256: shift/reduce conflict (shift 133(0), red'n 71(0)) on '('
256: shift/reduce conflict (shift 153(0), red'n 71(0)) on '['
256: shift/reduce conflict (shift 84(0), red'n 71(0)) on '*'
256: shift/reduce conflict (shift 143(0), red'n 311(0)) on FLOAT_LIT
256: shift/reduce conflict (shift 311(0), red'n 311(0)) on IDENTIFIER
256: shift/reduce conflict (shift 144(0), red'n 311(0)) on IMAGINARY_LIT
256: shift/reduce conflict (shift 142(0), red'n 311(0)) on INT_LIT
256: shift/reduce conflict (shift 145(0), red'n 311(0)) on RUNE_LIT
256: shift/reduce conflict (shift 146(0), red'n 311(0)) on STRING_LIT
256: shift/reduce conflict (shift 90(0), red'n 311(0)) on TOK5
256: shift/reduce conflict (shift 89(0), red'n 311(0)) on CHAN
256: shift/reduce conflict (shift 148(0), red'n 311(0)) on FUNC
256: shift/reduce conflict (shift 86(0), red'n 311(0)) on INTERFACE
256: shift/reduce conflict (shift 87(0), red'n 311(0)) on MAP
256: shift/reduce conflict (shift 83(0), red'n 311(0)) on STRUCT
256: shift/reduce conflict (shift 133(0), red'n 311(0)) on '('
256: shift/reduce conflict (shift 153(0), red'n 311(0)) on '['
256: shift/reduce conflict (shift 84(0), red'n 311(0)) on '*'
state 256
	ExprSwitchStmt:  SWITCH.ExprSwitchStmt1 ExprSwitchStmt2 '{' ExprSwitchStmt3 '}' 
	TypeSwitchStmt:  SWITCH.TypeSwitchStmt1 TypeSwitchGuard '{' TypeSwitchStmt2 '}' 
	ExprSwitchStmt1: .    (71)
	TypeSwitchStmt1: .    (311)
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 311
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	';'  reduce 66 (src line 629)
	'*'  shift 84
	.  reduce 71 (src line 657)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	EmptyStmt  goto 233
	ExprSwitchStmt1  goto 333
	Expression  goto 252
	ExpressionList  goto 254
	ExpressionStmt  goto 234
	FunctionLit  goto 138
	FunctionType  goto 76
	IdentifierList  goto 255
	IncDecStmt  goto 236
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 335
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	TypeSwitchStmt1  goto 334
	UnaryExpr  goto 125

state 257
	ParameterList1:  ParameterList1 ',' ParameterDecl.    (187)

	.  reduce 187 (src line 1266)


state 258
	ArrayType:  '[' ArrayLength ']' ElementType.    (14)

	.  reduce 14 (src line 355)


259: shift/reduce conflict (shift 188(0), red'n 78(0)) on BINARY_OP
state 259
	Expression:  Expression.BINARY_OP Expression 
	Expression:  Expression BINARY_OP Expression.    (78)

	BINARY_OP  shift 188
	.  reduce 78 (src line 692)


state 260
	Selector:  '.' IDENTIFIER.    (225)

	.  reduce 225 (src line 1461)


state 261
	TypeAssertion:  '.' '('.Type ')' 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 336
	TypeLit  goto 69
	TypeName  goto 68

 262: reduce/reduce conflict  (red'ns 240 and 244) on ':'
state 262
	Expression:  Expression.BINARY_OP Expression 
	Index:  '[' Expression.']' 
	Slice1:  Expression.    (240)
	Slice3:  Expression.    (244)

	BINARY_OP  shift 188
	']'  shift 337
	.  reduce 240 (src line 1536)


state 263
	Slice:  '[' Slice1.':' Slice2 ']' 

	':'  shift 338
	.  error


state 264
	Slice:  '[' Slice3.':' Expression ':' Expression ']' 

	':'  shift 339
	.  error


state 265
	Arguments:  '(' Arguments1.')' 

	')'  shift 340
	.  error


state 266
	Arguments1:  Arguments11.Arguments12 Arguments13 
	Arguments12: .    (9)

	TOK2  shift 342
	.  reduce 9 (src line 329)

	Arguments12  goto 341

state 267
	Arguments11:  ExpressionList.    (5)

	.  reduce 5 (src line 309)


268: shift/reduce conflict (shift 344(0), red'n 7(0)) on ','
state 268
	Arguments11:  Type.Arguments111 
	Conversion:  Type.'(' Expression Conversion1 ')' 
	ReceiverType:  Type.    (210)
	Arguments111: .    (7)

	'('  shift 200
	','  shift 344
	'.'  reduce 210 (src line 1381)
	.  reduce 7 (src line 319)

	Arguments111  goto 343

state 269
	Operand:  '(' Expression ')'.    (175)

	.  reduce 175 (src line 1202)


state 270
	Conversion:  Type '(' Expression.Conversion1 ')' 
	Expression:  Expression.BINARY_OP Expression 
	Conversion1: .    (52)

	BINARY_OP  shift 188
	','  shift 346
	.  reduce 52 (src line 555)

	Conversion1  goto 345

state 271
	MethodExpr:  ReceiverType '.' MethodName.    (169)

	.  reduce 169 (src line 1171)


state 272
	LiteralValue:  '{' LiteralValue1.'}' 

	'}'  shift 347
	.  error


state 273
	LiteralValue1:  ElementList.LiteralValue11 
	LiteralValue11: .    (163)

	','  shift 349
	.  reduce 163 (src line 1139)

	LiteralValue11  goto 348

state 274
	ElementList:  KeyedElement.ElementList1 
	ElementList1: .    (61)

	.  reduce 61 (src line 601)

	ElementList1  goto 350

state 275
	KeyedElement:  KeyedElement1.Element 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'{'  shift 203
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Element  goto 351
	Expression  goto 352
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	LiteralValue  goto 353
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 276
	KeyedElement1:  Key.':' 

	':'  shift 354
	.  error


state 277
	Key:  FieldName.    (142)

	.  reduce 142 (src line 1035)


state 278
	Expression:  Expression.BINARY_OP Expression 
	Key:  Expression.    (143)

	BINARY_OP  shift 188
	.  reduce 143 (src line 1040)


state 279
	Key:  LiteralValue.    (144)

	.  reduce 144 (src line 1044)


 280: reduce/reduce conflict  (red'ns 89 and 176) on ':'
 280: reduce/reduce conflict  (red'ns 176 and 179) on '.'
 280: reduce/reduce conflict  (red'ns 176 and 301) on '('
 280: reduce/reduce conflict  (red'ns 176 and 301) on '.'
state 280
	FieldName:  IDENTIFIER.    (89)
	OperandName:  IDENTIFIER.    (176)
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)

	'{'  reduce 301 (src line 1831)
	':'  reduce 89 (src line 751)
	.  reduce 176 (src line 1207)


state 281
	FunctionLit:  FUNC Signature FunctionBody.    (107)

	.  reduce 107 (src line 845)


state 282
	LiteralType:  '[' TOK2 ']'.ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ElementType  goto 355
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 161
	TypeLit  goto 69
	TypeName  goto 68

state 283
	StructType:  STRUCT '{' StructType1 '}'.    (270)

	.  reduce 270 (src line 1677)


state 284
	StructType1:  StructType1 FieldDecl.';' 

	';'  shift 356
	.  error


state 285
	FieldDecl:  FieldDecl1.FieldDecl2 
	FieldDecl2: .    (87)

	STRING_LIT  shift 359
	.  reduce 87 (src line 741)

	FieldDecl2  goto 357
	Tag  goto 358

state 286
	FieldDecl1:  IdentifierList.Type 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 360
	TypeLit  goto 69
	TypeName  goto 68

state 287
	FieldDecl1:  EmbeddedField.    (86)

	.  reduce 86 (src line 736)


state 288
	EmbeddedField:  EmbeddedField1.TypeName 

	IDENTIFIER  shift 71
	.  error

	PackageName  goto 81
	QualifiedIdent  goto 72
	TypeName  goto 361

state 289
	EmbeddedField1:  '*'.    (65)

	.  reduce 65 (src line 623)


state 290
	InterfaceType:  INTERFACE '{' InterfaceType1 '}'.    (138)

	.  reduce 138 (src line 1013)


state 291
	InterfaceType1:  InterfaceType1 MethodSpec.';' 

	';'  shift 362
	.  error


state 292
	MethodSpec:  MethodName.Signature 

	'('  shift 36
	.  error

	Parameters  goto 56
	Signature  goto 363

state 293
	MethodSpec:  InterfaceTypeName.    (172)

	.  reduce 172 (src line 1188)


state 294
	MethodName:  IDENTIFIER.    (170)
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)

	';'  reduce 301 (src line 1831)
	'.'  reduce 179 (src line 1223)
	.  reduce 170 (src line 1177)


state 295
	InterfaceTypeName:  TypeName.    (141)

	.  reduce 141 (src line 1029)


state 296
	MapType:  MAP '[' KeyType ']'.ElementType 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	ElementType  goto 364
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 161
	TypeLit  goto 69
	TypeName  goto 68

state 297
	ExpressionList1:  ExpressionList1 ','.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 365
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 298
	StatementList1:  StatementList1 Statement ';'.    (269)

	.  reduce 269 (src line 1672)


state 299
	LabeledStmt:  Label ':'.Statement 
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 251
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	BREAK  shift 241
	CHAN  shift 89
	CONST  shift 20
	CONTINUE  shift 242
	DEFER  shift 250
	FALLTHROUGH  shift 244
	FOR  shift 249
	FUNC  shift 148
	GO  shift 239
	GOTO  shift 243
	IF  shift 245
	INTERFACE  shift 86
	MAP  shift 87
	RETURN  shift 240
	SELECT  shift 248
	STRUCT  shift 83
	SWITCH  shift 256
	TYPE  shift 21
	VAR  shift 22
	'('  shift 133
	'['  shift 153
	'{'  shift 104
	'*'  shift 84
	.  reduce 66 (src line 629)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Block  goto 226
	BreakStmt  goto 222
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	ConstDecl  goto 16
	ContinueStmt  goto 223
	Conversion  goto 129
	Declaration  goto 217
	DeferStmt  goto 231
	EmptyStmt  goto 233
	ExprSwitchStmt  goto 246
	Expression  goto 252
	ExpressionList  goto 254
	ExpressionStmt  goto 234
	FallthroughStmt  goto 225
	ForStmt  goto 230
	FunctionLit  goto 138
	FunctionType  goto 76
	GoStmt  goto 220
	GotoStmt  goto 224
	IdentifierList  goto 255
	IfStmt  goto 227
	IncDecStmt  goto 236
	InterfaceType  goto 77
	Label  goto 232
	LabeledStmt  goto 218
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	ReturnStmt  goto 221
	SelectStmt  goto 229
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 219
	SliceType  goto 151
	Statement  goto 366
	StructType  goto 150
	SwitchStmt  goto 228
	Type  goto 134
	TypeDecl  goto 17
	TypeLit  goto 69
	TypeName  goto 141
	TypeSwitchStmt  goto 247
	UnaryExpr  goto 125
	VarDecl  goto 18

state 300
	Expression:  Expression.BINARY_OP Expression 
	GoStmt:  GO Expression.    (110)

	BINARY_OP  shift 188
	.  reduce 110 (src line 863)


state 301
	ReturnStmt:  RETURN ReturnStmt1.    (219)

	.  reduce 219 (src line 1429)


state 302
	ReturnStmt1:  ExpressionList.    (221)

	.  reduce 221 (src line 1440)


state 303
	BreakStmt:  BREAK BreakStmt1.    (23)

	.  reduce 23 (src line 401)


state 304
	BreakStmt1:  Label.    (25)

	.  reduce 25 (src line 412)


state 305
	Label:  IDENTIFIER.    (149)

	.  reduce 149 (src line 1071)


state 306
	ContinueStmt:  CONTINUE ContinueStmt1.    (48)

	.  reduce 48 (src line 533)


state 307
	ContinueStmt1:  Label.    (50)

	.  reduce 50 (src line 544)


state 308
	GotoStmt:  GOTO Label.    (111)

	.  reduce 111 (src line 869)


state 309
	IfStmt:  IF IfStmt1.Expression Block IfStmt2 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 367
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 310
	IfStmt1:  SimpleStmt.';' 

	';'  shift 368
	.  error


 311: reduce/reduce conflict  (red'ns 176 and 179) on '.'
 311: reduce/reduce conflict  (red'ns 176 and 301) on '('
 311: reduce/reduce conflict  (red'ns 176 and 301) on '{'
 311: reduce/reduce conflict  (red'ns 176 and 301) on '.'
 311: reduce/reduce conflict  (red'ns 176 and 113) on ','
state 311
	IdentifierList:  IDENTIFIER.IdentifierList1 
	OperandName:  IDENTIFIER.    (176)
	PackageName:  IDENTIFIER.    (179)
	TypeName:  IDENTIFIER.    (301)
	IdentifierList1: .    (113)

	TOK4  reduce 113 (src line 881)
	','  reduce 113 (src line 881)
	.  reduce 176 (src line 1207)

	IdentifierList1  goto 91

state 312
	SelectStmt:  SELECT '{'.SelectStmt1 '}' 
	SelectStmt1: .    (223)

	.  reduce 223 (src line 1451)

	SelectStmt1  goto 369

state 313
	ForStmt:  FOR ForStmt1.Block 

	'{'  shift 104
	.  error

	Block  goto 370

state 314
	ForStmt1:  ForStmt11.    (99)

	.  reduce 99 (src line 804)


state 315
	ForStmt11:  Condition.    (100)

	.  reduce 100 (src line 809)


state 316
	ForStmt11:  ForClause.    (101)

	.  reduce 101 (src line 814)


state 317
	ForStmt11:  RangeClause.    (102)

	.  reduce 102 (src line 818)


state 318
	Channel:  Expression.    (26)
	Condition:  Expression.    (37)
	Expression:  Expression.BINARY_OP Expression 
	ExpressionList:  Expression.ExpressionList1 
	ExpressionStmt:  Expression.    (82)
	IncDecStmt:  Expression.IncDecStmt1 
	ExpressionList1: .    (80)

	BINARY_OP  shift 188
	TOK1  shift 328
	TOK3  shift 329
	TOK5  reduce 26 (src line 417)
	'{'  reduce 37 (src line 475)
	';'  reduce 82 (src line 713)
	.  reduce 80 (src line 703)

	ExpressionList1  goto 214
	IncDecStmt1  goto 327

state 319
	ForClause:  ForClause1.';' ForClause2 ';' ForClause3 

	';'  shift 371
	.  error


state 320
	RangeClause:  RangeClause1.RANGE Expression 

	RANGE  shift 372
	.  error


state 321
	ForClause1:  InitStmt.    (92)

	.  reduce 92 (src line 768)


state 322
	RangeClause1:  RangeClause11.    (206)

	.  reduce 206 (src line 1360)


state 323
	InitStmt:  SimpleStmt.    (137)

	.  reduce 137 (src line 1007)


state 324
	Assignment:  ExpressionList.ASSIGN_OP ExpressionList 
	RangeClause11:  ExpressionList.'=' 

	ASSIGN_OP  shift 331
	'='  shift 373
	.  error


state 325
	RangeClause11:  IdentifierList.TOK4 
	ShortVarDecl:  IdentifierList.TOK4 ExpressionList 

	TOK4  shift 374
	.  error


state 326
	DeferStmt:  DEFER Expression.    (57)
	Expression:  Expression.BINARY_OP Expression 

	BINARY_OP  shift 188
	.  reduce 57 (src line 579)


state 327
	IncDecStmt:  Expression IncDecStmt1.    (133)

	.  reduce 133 (src line 985)


state 328
	IncDecStmt1:  TOK1.    (134)

	.  reduce 134 (src line 991)


state 329
	IncDecStmt1:  TOK3.    (135)

	.  reduce 135 (src line 996)


state 330
	SendStmt:  Channel TOK5.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 375
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 331
	Assignment:  ExpressionList ASSIGN_OP.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 376
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 332
	ShortVarDecl:  IdentifierList TOK4.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 377
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 333
	ExprSwitchStmt:  SWITCH ExprSwitchStmt1.ExprSwitchStmt2 '{' ExprSwitchStmt3 '}' 
	ExprSwitchStmt2: .    (73)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 73 (src line 667)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	ExprSwitchStmt2  goto 378
	Expression  goto 379
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

334: shift/reduce conflict (shift 382(0), red'n 308(0)) on IDENTIFIER
state 334
	TypeSwitchStmt:  SWITCH TypeSwitchStmt1.TypeSwitchGuard '{' TypeSwitchStmt2 '}' 
	TypeSwitchGuard1: .    (308)

	IDENTIFIER  shift 382
	.  reduce 308 (src line 1867)

	TypeSwitchGuard  goto 380
	TypeSwitchGuard1  goto 381

state 335
	ExprSwitchStmt1:  SimpleStmt.';' 
	TypeSwitchStmt1:  SimpleStmt.';' 

	';'  shift 383
	.  error


state 336
	TypeAssertion:  '.' '(' Type.')' 

	')'  shift 384
	.  error


state 337
	Index:  '[' Expression ']'.    (136)

	.  reduce 136 (src line 1001)


state 338
	Slice:  '[' Slice1 ':'.Slice2 ']' 
	Slice2: .    (241)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 241 (src line 1541)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 386
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	Slice2  goto 385
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 339
	Slice:  '[' Slice3 ':'.Expression ':' Expression ']' 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 387
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 340
	Arguments:  '(' Arguments1 ')'.    (2)

	.  reduce 2 (src line 293)


state 341
	Arguments1:  Arguments11 Arguments12.Arguments13 
	Arguments13: .    (11)

	','  shift 389
	.  reduce 11 (src line 339)

	Arguments13  goto 388

state 342
	Arguments12:  TOK2.    (10)

	.  reduce 10 (src line 334)


state 343
	Arguments11:  Type Arguments111.    (6)

	.  reduce 6 (src line 314)


state 344
	Arguments111:  ','.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 390
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 345
	Conversion:  Type '(' Expression Conversion1.')' 

	')'  shift 391
	.  error


state 346
	Conversion1:  ','.    (53)

	.  reduce 53 (src line 560)


state 347
	LiteralValue:  '{' LiteralValue1 '}'.    (160)

	.  reduce 160 (src line 1123)


state 348
	LiteralValue1:  ElementList LiteralValue11.    (162)

	.  reduce 162 (src line 1134)


state 349
	LiteralValue11:  ','.    (164)

	.  reduce 164 (src line 1144)


350: shift/reduce conflict (shift 392(0), red'n 60(0)) on ','
state 350
	ElementList:  KeyedElement ElementList1.    (60)
	ElementList1:  ElementList1.',' KeyedElement 

	','  shift 392
	.  reduce 60 (src line 595)


state 351
	KeyedElement:  KeyedElement1 Element.    (146)

	.  reduce 146 (src line 1055)


state 352
	Element:  Expression.    (58)
	Expression:  Expression.BINARY_OP Expression 

	BINARY_OP  shift 188
	.  reduce 58 (src line 585)


state 353
	Element:  LiteralValue.    (59)

	.  reduce 59 (src line 590)


state 354
	KeyedElement1:  Key ':'.    (148)

	.  reduce 148 (src line 1066)


state 355
	LiteralType:  '[' TOK2 ']' ElementType.    (156)

	.  reduce 156 (src line 1106)


state 356
	StructType1:  StructType1 FieldDecl ';'.    (272)

	.  reduce 272 (src line 1688)


state 357
	FieldDecl:  FieldDecl1 FieldDecl2.    (84)

	.  reduce 84 (src line 725)


state 358
	FieldDecl2:  Tag.    (88)

	.  reduce 88 (src line 746)


state 359
	Tag:  STRING_LIT.    (275)

	.  reduce 275 (src line 1703)


state 360
	FieldDecl1:  IdentifierList Type.    (85)

	.  reduce 85 (src line 731)


state 361
	EmbeddedField:  EmbeddedField1 TypeName.    (64)

	.  reduce 64 (src line 617)


state 362
	InterfaceType1:  InterfaceType1 MethodSpec ';'.    (140)

	.  reduce 140 (src line 1024)


state 363
	MethodSpec:  MethodName Signature.    (171)

	.  reduce 171 (src line 1183)


state 364
	MapType:  MAP '[' KeyType ']' ElementType.    (165)

	.  reduce 165 (src line 1149)


state 365
	Expression:  Expression.BINARY_OP Expression 
	ExpressionList1:  ExpressionList1 ',' Expression.    (81)

	BINARY_OP  shift 188
	.  reduce 81 (src line 708)


state 366
	LabeledStmt:  Label ':' Statement.    (150)

	.  reduce 150 (src line 1077)


state 367
	Expression:  Expression.BINARY_OP Expression 
	IfStmt:  IF IfStmt1 Expression.Block IfStmt2 

	BINARY_OP  shift 188
	'{'  shift 104
	.  error

	Block  goto 393

state 368
	IfStmt1:  SimpleStmt ';'.    (117)

	.  reduce 117 (src line 902)


state 369
	SelectStmt:  SELECT '{' SelectStmt1.'}' 
	SelectStmt1:  SelectStmt1.CommClause 

	CASE  shift 397
	DEFAULT  shift 398
	'}'  shift 394
	.  error

	CommCase  goto 396
	CommClause  goto 395

state 370
	ForStmt:  FOR ForStmt1 Block.    (97)

	.  reduce 97 (src line 793)


state 371
	ForClause:  ForClause1 ';'.ForClause2 ';' ForClause3 
	ForClause2: .    (93)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 93 (src line 773)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Condition  goto 400
	Conversion  goto 129
	Expression  goto 401
	ForClause2  goto 399
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 372
	RangeClause:  RangeClause1 RANGE.Expression 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 402
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 373
	RangeClause11:  ExpressionList '='.    (207)

	.  reduce 207 (src line 1365)


state 374
	RangeClause11:  IdentifierList TOK4.    (208)
	ShortVarDecl:  IdentifierList TOK4.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 208 (src line 1370)

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 377
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 375
	Expression:  Expression.BINARY_OP Expression 
	SendStmt:  Channel TOK5 Expression.    (226)

	BINARY_OP  shift 188
	.  reduce 226 (src line 1467)


state 376
	Assignment:  ExpressionList ASSIGN_OP ExpressionList.    (15)

	.  reduce 15 (src line 361)


state 377
	ShortVarDecl:  IdentifierList TOK4 ExpressionList.    (227)

	.  reduce 227 (src line 1473)


state 378
	ExprSwitchStmt:  SWITCH ExprSwitchStmt1 ExprSwitchStmt2.'{' ExprSwitchStmt3 '}' 

	'{'  shift 403
	.  error


state 379
	ExprSwitchStmt2:  Expression.    (74)
	Expression:  Expression.BINARY_OP Expression 

	BINARY_OP  shift 188
	.  reduce 74 (src line 672)


state 380
	TypeSwitchStmt:  SWITCH TypeSwitchStmt1 TypeSwitchGuard.'{' TypeSwitchStmt2 '}' 

	'{'  shift 404
	.  error


state 381
	TypeSwitchGuard:  TypeSwitchGuard1.PrimaryExpr '.' '(' TYPE ')' 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 405
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141

state 382
	TypeSwitchGuard1:  IDENTIFIER.TOK4 

	TOK4  shift 406
	.  error


 383: reduce/reduce conflict  (red'ns 72 and 312) on FLOAT_LIT
 383: reduce/reduce conflict  (red'ns 72 and 312) on IDENTIFIER
 383: reduce/reduce conflict  (red'ns 72 and 312) on IMAGINARY_LIT
 383: reduce/reduce conflict  (red'ns 72 and 312) on INT_LIT
 383: reduce/reduce conflict  (red'ns 72 and 312) on RUNE_LIT
 383: reduce/reduce conflict  (red'ns 72 and 312) on STRING_LIT
 383: reduce/reduce conflict  (red'ns 72 and 312) on TOK5
 383: reduce/reduce conflict  (red'ns 72 and 312) on CHAN
 383: reduce/reduce conflict  (red'ns 72 and 312) on FUNC
 383: reduce/reduce conflict  (red'ns 72 and 312) on INTERFACE
 383: reduce/reduce conflict  (red'ns 72 and 312) on MAP
 383: reduce/reduce conflict  (red'ns 72 and 312) on STRUCT
 383: reduce/reduce conflict  (red'ns 72 and 312) on '('
 383: reduce/reduce conflict  (red'ns 72 and 312) on '['
 383: reduce/reduce conflict  (red'ns 72 and 312) on '*'
state 383
	ExprSwitchStmt1:  SimpleStmt ';'.    (72)
	TypeSwitchStmt1:  SimpleStmt ';'.    (312)

	.  reduce 72 (src line 662)


state 384
	TypeAssertion:  '.' '(' Type ')'.    (282)

	.  reduce 282 (src line 1737)


state 385
	Slice:  '[' Slice1 ':' Slice2.']' 

	']'  shift 407
	.  error


state 386
	Expression:  Expression.BINARY_OP Expression 
	Slice2:  Expression.    (242)

	BINARY_OP  shift 188
	.  reduce 242 (src line 1546)


state 387
	Expression:  Expression.BINARY_OP Expression 
	Slice:  '[' Slice3 ':' Expression.':' Expression ']' 

	BINARY_OP  shift 188
	':'  shift 408
	.  error


state 388
	Arguments1:  Arguments11 Arguments12 Arguments13.    (4)

	.  reduce 4 (src line 304)


state 389
	Arguments13:  ','.    (12)

	.  reduce 12 (src line 344)


state 390
	Arguments111:  ',' ExpressionList.    (8)

	.  reduce 8 (src line 324)


state 391
	Conversion:  Type '(' Expression Conversion1 ')'.    (51)

	.  reduce 51 (src line 549)


392: shift/reduce conflict (shift 143(0), red'n 147(0)) on FLOAT_LIT
392: shift/reduce conflict (shift 280(0), red'n 147(0)) on IDENTIFIER
392: shift/reduce conflict (shift 144(0), red'n 147(0)) on IMAGINARY_LIT
392: shift/reduce conflict (shift 142(0), red'n 147(0)) on INT_LIT
392: shift/reduce conflict (shift 145(0), red'n 147(0)) on RUNE_LIT
392: shift/reduce conflict (shift 146(0), red'n 147(0)) on STRING_LIT
392: shift/reduce conflict (shift 127(0), red'n 147(0)) on UNARY_OP
392: shift/reduce conflict (shift 90(0), red'n 147(0)) on TOK5
392: shift/reduce conflict (shift 89(0), red'n 147(0)) on CHAN
392: shift/reduce conflict (shift 148(0), red'n 147(0)) on FUNC
392: shift/reduce conflict (shift 86(0), red'n 147(0)) on INTERFACE
392: shift/reduce conflict (shift 87(0), red'n 147(0)) on MAP
392: shift/reduce conflict (shift 83(0), red'n 147(0)) on STRUCT
392: shift/reduce conflict (shift 133(0), red'n 147(0)) on '('
392: shift/reduce conflict (shift 153(0), red'n 147(0)) on '['
392: shift/reduce conflict (shift 203(0), red'n 147(0)) on '{'
392: shift/reduce conflict (shift 84(0), red'n 147(0)) on '*'
state 392
	ElementList1:  ElementList1 ','.KeyedElement 
	KeyedElement1: .    (147)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 280
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'{'  shift 203
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 278
	FieldName  goto 277
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Key  goto 276
	KeyedElement  goto 409
	KeyedElement1  goto 275
	Literal  goto 131
	LiteralType  goto 147
	LiteralValue  goto 279
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 393
	IfStmt:  IF IfStmt1 Expression Block.IfStmt2 
	IfStmt2: .    (118)

	ELSE  shift 411
	.  reduce 118 (src line 907)

	IfStmt2  goto 410

state 394
	SelectStmt:  SELECT '{' SelectStmt1 '}'.    (222)

	.  reduce 222 (src line 1445)


state 395
	SelectStmt1:  SelectStmt1 CommClause.    (224)

	.  reduce 224 (src line 1456)


state 396
	CommClause:  CommCase.':' StatementList 

	':'  shift 412
	.  error


397: shift/reduce conflict (shift 143(0), red'n 213(0)) on FLOAT_LIT
397: shift/reduce conflict (shift 311(0), red'n 213(0)) on IDENTIFIER
397: shift/reduce conflict (shift 144(0), red'n 213(0)) on IMAGINARY_LIT
397: shift/reduce conflict (shift 142(0), red'n 213(0)) on INT_LIT
397: shift/reduce conflict (shift 145(0), red'n 213(0)) on RUNE_LIT
397: shift/reduce conflict (shift 146(0), red'n 213(0)) on STRING_LIT
397: shift/reduce conflict (shift 127(0), red'n 213(0)) on UNARY_OP
397: shift/reduce conflict (shift 90(0), red'n 213(0)) on TOK5
397: shift/reduce conflict (shift 89(0), red'n 213(0)) on CHAN
397: shift/reduce conflict (shift 148(0), red'n 213(0)) on FUNC
397: shift/reduce conflict (shift 86(0), red'n 213(0)) on INTERFACE
397: shift/reduce conflict (shift 87(0), red'n 213(0)) on MAP
397: shift/reduce conflict (shift 83(0), red'n 213(0)) on STRUCT
397: shift/reduce conflict (shift 133(0), red'n 213(0)) on '('
397: shift/reduce conflict (shift 153(0), red'n 213(0)) on '['
397: shift/reduce conflict (shift 84(0), red'n 213(0)) on '*'
state 397
	CommCase:  CASE.CommCase1 
	RecvStmt1: .    (213)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 311
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CommCase1  goto 413
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 417
	ExpressionList  goto 419
	FunctionLit  goto 138
	FunctionType  goto 76
	IdentifierList  goto 420
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	RecvStmt  goto 415
	RecvStmt1  goto 416
	RecvStmt11  goto 418
	SendStmt  goto 414
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 398
	CommCase:  DEFAULT.    (32)

	.  reduce 32 (src line 448)


state 399
	ForClause:  ForClause1 ';' ForClause2.';' ForClause3 

	';'  shift 421
	.  error


state 400
	ForClause2:  Condition.    (94)

	.  reduce 94 (src line 778)


state 401
	Condition:  Expression.    (37)
	Expression:  Expression.BINARY_OP Expression 

	BINARY_OP  shift 188
	.  reduce 37 (src line 475)


state 402
	Expression:  Expression.BINARY_OP Expression 
	RangeClause:  RangeClause1 RANGE Expression.    (204)

	BINARY_OP  shift 188
	.  reduce 204 (src line 1349)


state 403
	ExprSwitchStmt:  SWITCH ExprSwitchStmt1 ExprSwitchStmt2 '{'.ExprSwitchStmt3 '}' 
	ExprSwitchStmt3: .    (75)

	.  reduce 75 (src line 677)

	ExprSwitchStmt3  goto 422

state 404
	TypeSwitchStmt:  SWITCH TypeSwitchStmt1 TypeSwitchGuard '{'.TypeSwitchStmt2 '}' 
	TypeSwitchStmt2: .    (313)

	.  reduce 313 (src line 1893)

	TypeSwitchStmt2  goto 423

state 405
	PrimaryExpr:  PrimaryExpr.Selector 
	PrimaryExpr:  PrimaryExpr.Index 
	PrimaryExpr:  PrimaryExpr.Slice 
	PrimaryExpr:  PrimaryExpr.TypeAssertion 
	PrimaryExpr:  PrimaryExpr.Arguments 
	TypeSwitchGuard:  TypeSwitchGuard1 PrimaryExpr.'.' '(' TYPE ')' 

	'('  shift 196
	'['  shift 195
	'.'  shift 424
	.  error

	Arguments  goto 193
	Index  goto 190
	Selector  goto 189
	Slice  goto 191
	TypeAssertion  goto 192

state 406
	TypeSwitchGuard1:  IDENTIFIER TOK4.    (309)

	.  reduce 309 (src line 1872)


state 407
	Slice:  '[' Slice1 ':' Slice2 ']'.    (237)

	.  reduce 237 (src line 1521)


state 408
	Slice:  '[' Slice3 ':' Expression ':'.Expression ']' 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 425
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 409
	ElementList1:  ElementList1 ',' KeyedElement.    (62)

	.  reduce 62 (src line 606)


state 410
	IfStmt:  IF IfStmt1 Expression Block IfStmt2.    (115)

	.  reduce 115 (src line 891)


state 411
	IfStmt2:  ELSE.IfStmt21 

	IF  shift 245
	'{'  shift 104
	.  error

	Block  goto 428
	IfStmt  goto 427
	IfStmt21  goto 426

state 412
	CommClause:  CommCase ':'.StatementList 
	StatementList1: .    (268)

	.  reduce 268 (src line 1667)

	StatementList  goto 429
	StatementList1  goto 176

state 413
	CommCase:  CASE CommCase1.    (31)

	.  reduce 31 (src line 443)


state 414
	CommCase1:  SendStmt.    (33)

	.  reduce 33 (src line 453)


state 415
	CommCase1:  RecvStmt.    (34)

	.  reduce 34 (src line 458)


state 416
	RecvStmt:  RecvStmt1.RecvExpr 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 431
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	RecvExpr  goto 430
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 417
	Channel:  Expression.    (26)
	Expression:  Expression.BINARY_OP Expression 
	ExpressionList:  Expression.ExpressionList1 
	ExpressionList1: .    (80)

	BINARY_OP  shift 188
	TOK5  reduce 26 (src line 417)
	.  reduce 80 (src line 703)

	ExpressionList1  goto 214

state 418
	RecvStmt1:  RecvStmt11.    (214)

	.  reduce 214 (src line 1404)


state 419
	RecvStmt11:  ExpressionList.'=' 

	'='  shift 432
	.  error


state 420
	RecvStmt11:  IdentifierList.TOK4 

	TOK4  shift 433
	.  error


 421: reduce/reduce conflict  (red'ns 95 and 66) on '{'
state 421
	ForClause:  ForClause1 ';' ForClause2 ';'.ForClause3 
	ForClause3: .    (95)
	EmptyStmt: .    (66)

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 311
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  reduce 66 (src line 629)

	ArrayType  goto 149
	Assignment  goto 237
	BasicLit  goto 136
	Channel  goto 253
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	EmptyStmt  goto 233
	Expression  goto 252
	ExpressionList  goto 254
	ExpressionStmt  goto 234
	ForClause3  goto 434
	FunctionLit  goto 138
	FunctionType  goto 76
	IdentifierList  goto 255
	IncDecStmt  goto 236
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PostStmt  goto 435
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SendStmt  goto 235
	ShortVarDecl  goto 238
	SimpleStmt  goto 436
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 422
	ExprSwitchStmt:  SWITCH ExprSwitchStmt1 ExprSwitchStmt2 '{' ExprSwitchStmt3.'}' 
	ExprSwitchStmt3:  ExprSwitchStmt3.ExprCaseClause 

	CASE  shift 440
	DEFAULT  shift 441
	'}'  shift 437
	.  error

	ExprCaseClause  goto 438
	ExprSwitchCase  goto 439

state 423
	TypeSwitchStmt:  SWITCH TypeSwitchStmt1 TypeSwitchGuard '{' TypeSwitchStmt2.'}' 
	TypeSwitchStmt2:  TypeSwitchStmt2.TypeCaseClause 

	CASE  shift 445
	DEFAULT  shift 446
	'}'  shift 442
	.  error

	TypeCaseClause  goto 443
	TypeSwitchCase  goto 444

state 424
	Selector:  '.'.IDENTIFIER 
	TypeAssertion:  '.'.'(' Type ')' 
	TypeSwitchGuard:  TypeSwitchGuard1 PrimaryExpr '.'.'(' TYPE ')' 

	IDENTIFIER  shift 260
	'('  shift 447
	.  error


state 425
	Expression:  Expression.BINARY_OP Expression 
	Slice:  '[' Slice3 ':' Expression ':' Expression.']' 

	BINARY_OP  shift 188
	']'  shift 448
	.  error


state 426
	IfStmt2:  ELSE IfStmt21.    (119)

	.  reduce 119 (src line 912)


state 427
	IfStmt21:  IfStmt.    (120)

	.  reduce 120 (src line 917)


state 428
	IfStmt21:  Block.    (121)

	.  reduce 121 (src line 922)


state 429
	CommClause:  CommCase ':' StatementList.    (35)

	.  reduce 35 (src line 463)


state 430
	RecvStmt:  RecvStmt1 RecvExpr.    (212)

	.  reduce 212 (src line 1393)


state 431
	Expression:  Expression.BINARY_OP Expression 
	RecvExpr:  Expression.    (211)

	BINARY_OP  shift 188
	.  reduce 211 (src line 1387)


state 432
	RecvStmt11:  ExpressionList '='.    (215)

	.  reduce 215 (src line 1409)


state 433
	RecvStmt11:  IdentifierList TOK4.    (216)

	.  reduce 216 (src line 1414)


state 434
	ForClause:  ForClause1 ';' ForClause2 ';' ForClause3.    (90)

	.  reduce 90 (src line 757)


state 435
	ForClause3:  PostStmt.    (96)

	.  reduce 96 (src line 788)


state 436
	PostStmt:  SimpleStmt.    (194)

	.  reduce 194 (src line 1303)


state 437
	ExprSwitchStmt:  SWITCH ExprSwitchStmt1 ExprSwitchStmt2 '{' ExprSwitchStmt3 '}'.    (70)

	.  reduce 70 (src line 651)


state 438
	ExprSwitchStmt3:  ExprSwitchStmt3 ExprCaseClause.    (76)

	.  reduce 76 (src line 682)


state 439
	ExprCaseClause:  ExprSwitchCase.':' StatementList 

	':'  shift 449
	.  error


state 440
	ExprSwitchCase:  CASE.ExpressionList 

	FLOAT_LIT  shift 143
	IDENTIFIER  shift 139
	IMAGINARY_LIT  shift 144
	INT_LIT  shift 142
	RUNE_LIT  shift 145
	STRING_LIT  shift 146
	UNARY_OP  shift 127
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 148
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 133
	'['  shift 153
	'*'  shift 84
	.  error

	ArrayType  goto 149
	BasicLit  goto 136
	ChannelType  goto 80
	ChannelType1  goto 88
	CompositeLit  goto 137
	Conversion  goto 129
	Expression  goto 173
	ExpressionList  goto 450
	FunctionLit  goto 138
	FunctionType  goto 76
	InterfaceType  goto 77
	Literal  goto 131
	LiteralType  goto 147
	MapType  goto 152
	MethodExpr  goto 130
	Operand  goto 128
	OperandName  goto 132
	PackageName  goto 81
	PointerType  goto 75
	PrimaryExpr  goto 126
	QualifiedIdent  goto 140
	ReceiverType  goto 135
	SliceType  goto 151
	StructType  goto 150
	Type  goto 134
	TypeLit  goto 69
	TypeName  goto 141
	UnaryExpr  goto 125

state 441
	ExprSwitchCase:  DEFAULT.    (69)

	.  reduce 69 (src line 646)


state 442
	TypeSwitchStmt:  SWITCH TypeSwitchStmt1 TypeSwitchGuard '{' TypeSwitchStmt2 '}'.    (310)

	.  reduce 310 (src line 1877)


state 443
	TypeSwitchStmt2:  TypeSwitchStmt2 TypeCaseClause.    (314)

	.  reduce 314 (src line 1898)


state 444
	TypeCaseClause:  TypeSwitchCase.':' StatementList 

	':'  shift 451
	.  error


state 445
	TypeSwitchCase:  CASE.TypeList 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 453
	TypeList  goto 452
	TypeLit  goto 69
	TypeName  goto 68

state 446
	TypeSwitchCase:  DEFAULT.    (306)

	.  reduce 306 (src line 1856)


state 447
	TypeAssertion:  '.' '('.Type ')' 
	TypeSwitchGuard:  TypeSwitchGuard1 PrimaryExpr '.' '('.TYPE ')' 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	TYPE  shift 454
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 336
	TypeLit  goto 69
	TypeName  goto 68

state 448
	Slice:  '[' Slice3 ':' Expression ':' Expression ']'.    (238)

	.  reduce 238 (src line 1526)


state 449
	ExprCaseClause:  ExprSwitchCase ':'.StatementList 
	StatementList1: .    (268)

	.  reduce 268 (src line 1667)

	StatementList  goto 455
	StatementList1  goto 176

state 450
	ExprSwitchCase:  CASE ExpressionList.    (68)

	.  reduce 68 (src line 641)


state 451
	TypeCaseClause:  TypeSwitchCase ':'.StatementList 
	StatementList1: .    (268)

	.  reduce 268 (src line 1667)

	StatementList  goto 456
	StatementList1  goto 176

state 452
	TypeSwitchCase:  CASE TypeList.    (305)

	.  reduce 305 (src line 1851)


state 453
	TypeList:  Type.TypeList1 
	TypeList1: .    (291)

	.  reduce 291 (src line 1787)

	TypeList1  goto 457

state 454
	TypeSwitchGuard:  TypeSwitchGuard1 PrimaryExpr '.' '(' TYPE.')' 

	')'  shift 458
	.  error


state 455
	ExprCaseClause:  ExprSwitchCase ':' StatementList.    (67)

	.  reduce 67 (src line 635)


state 456
	TypeCaseClause:  TypeSwitchCase ':' StatementList.    (283)

	.  reduce 283 (src line 1743)


state 457
	TypeList:  Type TypeList1.    (290)
	TypeList1:  TypeList1.',' Type 

	','  shift 459
	.  reduce 290 (src line 1781)


state 458
	TypeSwitchGuard:  TypeSwitchGuard1 PrimaryExpr '.' '(' TYPE ')'.    (307)

	.  reduce 307 (src line 1861)


state 459
	TypeList1:  TypeList1 ','.Type 

	IDENTIFIER  shift 71
	TOK5  shift 90
	CHAN  shift 89
	FUNC  shift 85
	INTERFACE  shift 86
	MAP  shift 87
	STRUCT  shift 83
	'('  shift 70
	'['  shift 82
	'*'  shift 84
	.  error

	ArrayType  goto 73
	ChannelType  goto 80
	ChannelType1  goto 88
	FunctionType  goto 76
	InterfaceType  goto 77
	MapType  goto 79
	PackageName  goto 81
	PointerType  goto 75
	QualifiedIdent  goto 72
	SliceType  goto 78
	StructType  goto 74
	Type  goto 460
	TypeLit  goto 69
	TypeName  goto 68

state 460
	TypeList1:  TypeList1 ',' Type.    (292)

	.  reduce 292 (src line 1792)

Rule not reduced: ForClause1:  
Rule not reduced: ForClause3:  
Rule not reduced: IfStmt1:  
Rule not reduced: KeyedElement1:  
Rule not reduced: RecvStmt1:  
Rule not reduced: Slice3:  
Rule not reduced: Slice3:  Expression 
Rule not reduced: TypeSwitchStmt1:  
Rule not reduced: TypeSwitchStmt1:  SimpleStmt ';' 

54 terminals, 188 nonterminals
327 grammar rules, 461/8000 states
117 shift/reduce, 46 reduce/reduce conflicts reported
237 working sets used
memory: parser 4128/120000
196 extra closures
1058 shift entries, 34 exceptions
430 goto entries
1262 entries saved by goto default
Optimizer space used: output 936/120000
936 table entries, 144 zero
maximum spread: 54, maximum offset: 459
